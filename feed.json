{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sparkle",
    "subtitle": "加油",
    "icon": "http://example.com/images/favicon.ico",
    "description": "好好读书",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/02/20/vue%E7%AC%94%E8%AE%B0/",
            "url": "http://example.com/2022/02/20/vue%E7%AC%94%E8%AE%B0/",
            "title": "",
            "date_published": "2022-02-20T08:36:02.696Z",
            "content_html": "<p>&lt;!DOCTYPE html&gt;<br />\n&lt;html lang=&quot;en&quot;&gt;</p>\n<p>&lt;head&gt;<br />\n&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\n&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;<br />\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br />\n&lt;title&gt;Document&lt;/title&gt;<br />\n&lt;/head&gt;</p>\n<p>&lt;body&gt;<br />\n&lt;pre&gt;<br />\n&lt;xmp style=&quot;font-size: 21px;&quot;&gt;<br />\n01<br />\n 前端开发：模块化 组件化 规范化 自动化<br />\n npm run dev 会先去 webpack.config 里面查看配置 然后再执行<br />\n项目源码 在页面中导入的是经 webpack 处理过的代码 所以要修改代码都要 修改源码再 run 页面才会变<br />\n Source Map:1. 省略 devtool 选项 防止暴露源码 2. 把 devtool 设置为 nosource-source-map 只定位行数不暴露源码<br />\n 3. 把 devtool 设置为 source-map 定位行数且显示源码<br />\n开发环境第三种 生产环境第一种或者第二种</p>\n<pre><code>        02\n        数据驱动视图\n        双向数据绑定\n        MVVM Model View ViewModel\n        \n\n        v-text &#123;&#123;&#125;&#125; v-html \n            v-on简写@ v-bind简写:\n            v-model \n            this===vm 在方法中访问data的数据可以用this.数据名 在data中声明的数据都会挂载到vm的属性上\n            方法add:function()&#123;&#125;简写为add()&#123;&#125;\n            @click=\"add(1,$event)\"\n            只要接收的值被覆盖都可以用$event\n            @click.prevent=\"add\" 事件修饰符 .stop .esc .enter\n            表单元素用v-model 修饰符 .number .trim .lazy\n            v-if和v-show一般都用v-if 还可以搭配if-else或者if-else-if 但是直接写三元就可以\n            在\"\"里面写字符串要加单引号(就当成在写js)\n            <tr v-for=\"(item ,index) in list\" :title=\"item.name+index\" :key=\"item.id\">\n            v-for(item in items)item是每一项 items是被循环的数组 要搭配使用:key=\"item.id\"\n            \n\n            过滤器&#123;&#123;mes | capi | format(arg1) &#125;&#125; 在filters节点定义过滤器 可以连续使用多个过滤器 过滤器的本质是js函数 所以可以接收参数\n        filters:&#123;\n            capi(mes)&#123;\n                return mes.charAt(0).toUpperCase()+mes.slice(1)\n            &#125;\n        &#125;\n        上面定义的是私有过滤器 在入口函数main.js里面可以定义全局过滤器\n        Vue.filter('capi',mes=&gt;&#123;\n            return mes.charAt(0).toUpperCase()+mes.slice(1)\n        &#125;)\n        Vue.filter('format',(mes,arg)=&gt;&#123;&#125;)\n    \n\n\n\n        03\n        监听器watch 可以用来监听值的变化 并且发起请求 比对值是否可用\n        watch:&#123;\n            async username(oldVal,newVal)&#123;\n                console(oldVal,newVal)\n                if(newVal.trim()==='') return\n                const &#123;data:res&#125;=await axios.get('https://www.escook.cn/api/finduser'+newVal)\n                console.log(res)\n            &#125;\n        &#125;\n        如果需要immediate或者deep就需要把username改为对象形式\n        username:&#123;\n            handle:async function(newVal)&#123;\n                if(newVal.trim()==='') return\n                const &#123;data :res&#125;=await axios.get('https://www.escook.cn/api/finduser'+newVal)\n                console.log(res)\n            &#125;,\n            //如果需要初次加载就立即被调用\n            immediate:true,\n            //如果监听的是一个对象 如果对象的属性发生了变化 则无法监听到 这时候需要deep选项\n            deep:true\n        &#125;\n        如果只想监听一个属性也可以写成这样\n        'info.username':&#123;\n        &#125;\n    \n\n        计算属性computed\n        计算属性指的是通过一系列运算之后，最终得到一个属性值 这个动态计算出来的属性值可以被模板结构或 methods 方法使用。\n        computed:&#123;\n            rgb()&#123;return `rgb($&#123;this.r&#125;,$&#123;this.g&#125;,$&#123;this.b&#125;)`&#125;\n        &#125;\n        计算属性的特点\n        ① 虽然计算属性在声明的时候被定义为方法，但是计算属性的本质是一个属性\n        ② 计算属性会缓存计算的结果，只有计算属性依赖的数据变化时，才会重新进行运算\n    \n\n        day.js\n        axios(&#123;\n            method:&quot;GET&quot;,\n            url:&quot;&quot;,\n            //get参数\n            params:&#123;&#125;,\n            //post参数\n            data:&#123;&#125;,\n        &#125;).then(res=&gt;&#123;console.log(res)&#125;)\n    \n        写模板 import Test from './Test.vue' 导入 渲染\n        &lt;button id=&quot;btnPost&quot;&gt;&lt;/button&gt;\n        &lt;button id=&quot;btnGet&quot;&gt;&lt;/button&gt;\n        &lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;\n        &lt;script&gt;\n            document.querySelector('#btnPost').addEventListener('click', async function () &#123;\n                const &#123; data &#125; = await axios(&#123;\n                    method: &quot;POST&quot;,\n                    url: &quot;http://www.liulongbin.top:3006/api/post&quot;,\n                    data: &#123;\n                        name: &quot;zs&quot;,\n                        age: 20\n                    &#125;\n                &#125;)\n                console.log(data);\n            &#125;)\n\n            document.querySelector('#btnGet').addEventListener('click', async function () &#123;\n                //解构赋值的时候 使用:进行重命名\n                //调用axios,使用async/await进行简化\n                //使用解构赋值 从axios封装的对象中 把data属性解构出来\n                //解构出来的属性用:进行重命名 一般都重命名为&#123;data:res&#125;\n                const &#123; data: res &#125; = await axios(&#123;\n                    method: &quot;GET&quot;,\n                    url: &quot;http://www.liulongbin.top:3006/api/getbooks&quot;\n                &#125;)\n\n                console.log(res.data);\n            &#125;)\n        &lt;/script&gt;\n\n\n        vue-cli\n        npm install -g @vue/cli\n        vue create 项目的名称\n\n        new Vue(&#123;\n            // render 函数中，渲染的是哪个 .vue 组件，那么这个组件就叫做 “根组件”\n            render: h =&gt; h(App)\n        &#125;).$mount('#app')\n        $mount()和el的作用一样\n\n        import Left from '@/components/Left.vue' @指向src目录\n        在webpack.config.js里面的module.exports=&#123;\n            resolve:&#123;\n                alias:&#123;\n                   @:path.join(__dirname,'./src')\n                &#125;\n            &#125;\n        &#125;\n\n\n        使用组件三步骤\n        &lt;template&gt;\n            &lt;div&gt;\n                &lt;!-- 以标签的形式使用注册好的组件 --&gt;\n                &lt;Left&gt;&lt;/Left&gt;\n            &lt;/div&gt;\n        &lt;/template&gt;\n    \n        &lt;script&gt;\n            //导入需要使用的.vue组件\n            import Left from '@/components/Left.vue'\n\n            export default &#123;\n                //注册组件\n                //.vue 组件中的 data 必须是函数\n                components: &#123;\n                    Left,\n                    right\n                &#125;\n            &#125;\n        &lt;/script&gt;\n\n        上面这种注册的是私有子组件 注册全局组件要在main.js里面 通过Vue.component()方法   \n        注册全局组件 在main.js入口文件中 通过Vue.component()方法\n        //导入需要的全局注册的组件\n        import Count form '@/component/Count.vue'\n        //参数1: 字符串 声明组件的注册名称 参数2 需要被全局注册的组件\n        Vue.component('MyCount',Count)\n\n\n        //props 是组件的自定义属性，在封装通用组件的时候，合理地使用 props 可以极大的提高组件的复用性！\n        exports default&#123;\n            props:['init','age']\n            //vue 规定：组件中封装的自定义属性是只读的，程序员不能直接修改 props 的值。否则会直接报错：\n            //要想修改 props 的值，可以把 props 的值转存到 data 中，因为 data 中的数据都是可读可写的！\n            data()&#123;\n                return&#123;\n                    count:this.init\n                &#125;\n            &#125;\n        &#125;\n\n        在使用时&lt;MyCount init=&quot;8&quot;&gt; &lt;MyCount&gt;\n        不加冒号init的值就是字符串8 加就是数字 :init=&quot;9&quot; 因为&quot;&quot;里面是js语法\n        \n        定义默认值时 props要改为对象模式\n        export default&#123;\n            props:&#123;\n                default:0,\n                type:Number,\n                //多个可能的类型\n                //type:[Number,String]\n                required:true\n            &#125;\n        &#125;\n        \n        vue文件所有内容都要被解析成js才能渲染在浏览器中\n        Count组件只有使用的时候才会生成实例\n        \n        组件样式之间会有冲突 给style节点添加scoped属性\n        给HTML的dom节点添加一个不重复的data属性(例如: data-v-5558831a)来唯一标识这个dom 元素\n        在每句css选择器的末尾(编译后生成的css语句)加一个当前组件的data属性选择器(例如：[data-v-5558831a])来私有化样式\n        但是scoped对子组件是不生效的 要让某些样式对子组件生效 可以在其选择器前面加/deep/\n        通过 v-html 创建的 DOM 内容不受 scoped 样式影响，但是你仍然可以通过深度作用选择器来为他们设置样式。\n\n\n\n\n        04\n        生命周期\n        生命周期（Life Cycle）是指一个组件从创建 -&gt; 运行 -&gt; 销毁的整个阶段，强调的是一个时间段。\n        生命周期函数：是由 vue 框架提供的内置函数，会伴随着组件的生命周期，自动按次序执行。\n        注意：生命周期强调的是时间段，生命周期函数强调的是时间点。\n\n\n        beforeCreate不重要 \n        created重要 经常在created阶段发起axios请求 因为可以最早发起请求 然后把请求到的数据转存在data里 但是这时不能操作DOM 因为模板结构尚未创建\n        beforeMount也还操作不了DOM 不重要\n        mounted已经把DOM结构渲染到页面中了 在这可以最早操作DOM结构 \n        beforeUpdate这时DOM结构还是旧的 但是数据是最新的\n        updated数据和结构都是最新的 在这可以操作最新的DOM结构\n\n\n        组件间的数据关系\n        父组件向子组件共享数据需要使用自定义属性props 不建议修改props的值\n        04-9\n        子组件向父组件共享数据使用自定义事件 \n        04-10\n        在 vue2.x 中 兄弟组件之间数据共享的方案是 EventBus\n        04-11\n        在数据的发送方定义要发送的数据 在数据的接收方定义要接收的数据\n        创建eventBus.js 就是new一个Vue的实例 然后向外共享\n        发送方和接收方都导入eventBus 发送方绑定$emit 接收方绑定$on事件\n        发送方methods:&#123;\n            sendMsg()&#123;\n                //第一个参数是自定义事件名 第二个是要处理的数据\n                bus.$emit('share',this.msg)\n            &#125;\n        &#125;\n        接收方created()&#123;\n            bus.$on('share',val=&gt;&#123;\n                this.msgFromLeft=val;\n            &#125;)\n        &#125;\n\n        \n        ref引用\n        在vue中获取DOM元素使用ref\n        给想要操作的DOM元素添加ref属性 然后可以通过this.$refs.属性值来获取\n        ref除了引用DOM 还可以引用组件\n        在父组件中要去调子组件的值用ref是最简单的\n        this.$refs.ww.dialogVisible\n        this.$refs.ipt.focus()\n\n        $nextTick可以解决数据更新都是DOM结构还没有更新导致的报错\n        this.$nextTick(func)\n        组件的 $nextTick(cb) 方法，会把 cb 回调推迟到下一个 DOM 更新周期之后执行。通俗的理解是：等组件的\n        DOM 更新完成之后，再执行 cb 回调函数。从而能保证 cb 回调函数可以操作到最新的 DOM 元素。\n        updated数据变化时就会触发 使用动态组件来回切换组件会触发两次 \n\n\n\n\n        额外知识\n        some \n        const arr=[1,2,3,4,5]\n        forEach可以实现查找数组的某一元素但是forEach一旦开始无法停止 性能较差\n        arr.some((item,index)=&gt;&#123;\n            if(item==='xx') return true\n        &#125;)\n        some在找到对应的项之后可以通过return true来终止some循环\n    \n        every \n        需求:判断数组中 每一项的状态是否都为true\n        arr.every(item=&gt;item.state)  把item.state===true简写\n        arr.filter(item =&gt; item.id == 1) return item.id==1的\n        arr.filter(item =&gt; item.id ) return 有item.id这个属性的\n\n        reduce\n        需求:把购物车数组中 已勾选的水果 总价累加起来\n        let amt = 0;\n        arr.filter(item=&gt;item.state).forEach(item=&gt;&#123;\n           amt += item.price * item count\n        &#125;)\n\n        filter\n        arr.filter(item=&gt;item.state).reduce((累加的结果,当前循环项)=&gt;&#123;&#125;,初始值)\n        const result = arr.filter(item=&gt;item.state).reduce((amt,item)=&gt;&#123;\n            retuen amt +=item.price * item.count\n            //return的值会作为第二次累加的初始值\n        &#125;,0)\n        arr.filter(item=&gt;item.state).reduce((amt,item)=&gt;amt+=item.price * item.count,0)\n\n        简写代码会把那一行代码默认作为return的返回值\n\n\n\n\n        05动态组件\n        vue 提供了一个内置的 &lt;component :is=&quot;comName&quot; include=&quot;aside&quot;&gt; 组件，专门用来实现动态组件的渲染\n        通过&lt;button @click=&quot;comName='Left&quot;&gt;&lt;/button&gt;来切换组件\n        默认情况下，切换动态组件时无法保持组件的状态-即会重新加载。此时可以使用 vue 内置的 &lt;keep-alive&gt; 组件保持动态组件的状态。\n        用keep-alive包住动态组件 keep-alive 对应的生命周期函数\n        当组件被缓存时，会自动触发组件的 deactivated 生命周期函数。\n        当组件被激活时，会自动触发组件的 activated 生命周期函数。\n        当组件第一次被创建的时候，会先执行created 生命周期，再会执行activated 生命周期\n        当组件被激活的时候，只会触发 activated 生命周期，不再触发 created。因为组件没有被重新创建\n        include 属性用来指定：只有名称匹配的组件会被缓存，不匹配的会销毁。多个组件名之间使用英文的逗号分隔:\n        exclude 指定组件不被缓存 两个属性不能同时使用\n        如果在“声明组件”的时候，没有为组件指定 name名称，则组件的名称默认就是“注册时候的名称”\n        当提供了name属性之后，组件的名称，就是name属性的值 在开发中一般都会指定name 首字母大写\n        根节点就xxx-container xxx就组件名\n        对比:\n        1.组件的“注册名称”的主要应用场景是:以标签的形式，把注册好的组件，渲染和使用到页面结构之中\n        2.组件声明时候的“name”名称的主要应用场景:结合&lt;keep-alive&gt;标签实现组件缓存功能;以及在调试工具中看到组件的name名称\n        &lt;keep-alive include=&quot;Myleft,Myright&quot;&gt;\n            &lt;component :is=&quot;comName&quot;&gt;&lt;/component&gt;&gt;\n        &lt;/keep-alive&gt;\n\n\n        插槽slot\n        是在组件里的一部分\n        可以把插槽认为是组件封装期间，为用户预留的内容的占位符\n        可以通过 &lt;slot&gt; 元素定义插槽，从而为用户预留内容占位符。\n        封装组件时，可以为预留的 &lt;slot&gt; 插槽提供后备内容,直接写在slot标签里面。如果组件的使用者没有为插槽提供任何内容，则后备内容会生效。\n        如果在封装组件时需要预留多个插槽节点，则需要为每个 &lt;slot&gt; 插槽指定具体的 name 名称。这种带有具体名称的插槽叫做“具名插槽”。\n        没有指定 name 名称的插槽，会有隐含的名称叫做 “default”\n        在向具名插槽提供内容的时候，我们可以在一个 &lt;template&gt; 元素上使用 v-slot 指令，并以 v-slot 的参数的形式提供其名称。\n        v-slot后面要跟上插槽的名字 v-slot不能直接使用在元素身上 必须用在template或者组件上\n        template只起到一个包裹的作用 不会渲染成任何元素\n        v-slot:可以简写为#\n\n        在封装组件的过程中，可以为预留的 &lt;slot&gt; 插槽绑定 props 数据，这种带有 props 数据的 &lt;slot&gt; 叫做“作用域插槽”\n        通过#content=&quot;scope&quot;接收作用域插槽对外提供的数据 &#123;&#123;scope.msg&#125;&#125;\n        可以在接收的时候直接解构#content=&quot;&#123;msg,user&#125;&quot; &#123;&#123;msg&#125;&#125;\n        声明组件:\n        &lt;template&gt;\n            &lt;div&gt;\n                &lt;slot&gt;&lt;/slot&gt;\n                &lt;!-- 具名插槽 --&gt;\n                &lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;\n                &lt;!-- 作用域插槽 --&gt;\n                &lt;slot :user=&quot;username&quot;&gt;&lt;/slot&gt;\n            &lt;/div&gt;\n        &lt;/template&gt;\n        调用组件:\n        &lt;Nav&gt;\n            &lt;!-- 对应默认插槽 --&gt;\n            &lt;p&gt;123&lt;/p&gt;\n            &lt;!-- 对应具名插槽 --&gt;\n            &lt;template #header&gt;\n                &lt;h1&gt;456&lt;/h1&gt;\n            &lt;/template&gt;\n            &lt;!-- 对应作用域插槽 --&gt;\n            &lt;template #default=&quot;scope&quot;&gt;\n                &lt;p&gt;&#123;&#123; scope &#125;&#125;&lt;/p&gt;\n            &lt;/template&gt;\n        &lt;/Nav&gt;\n\n        table组件\n        &lt;template&gt;\n            &lt;table class=&quot;table table-bordered table-striped&quot;&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;\n                        &lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;\n                    &lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;!-- 表格的主体区域 --&gt;\n                &lt;tbody&gt;\n                    &lt;!-- 使用 v-for 指令，循环渲染表格的数据行 --&gt;\n                    &lt;tr v-for=&quot;(item, index) in data&quot; :key=&quot;item.id&quot;&gt;\n                        &lt;!-- 为数据行的 td 预留的“作用域插槽” --&gt;\n                        &lt;slot name=&quot;body&quot; :row=&quot;item&quot; :index=&quot;index&quot;&gt;&lt;/slot&gt;\n                    &lt;/tr&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n        &lt;/template&gt;\n\n        &lt;!-- 使用表格组件 --&gt;\n        &lt;!-- 在 MyTable.vue 组件的 props 节点中声明表格的 data 数据源： --&gt;\n        &lt;!-- 在使用 MyTable.vue 组件时，通过属性绑定的形式为表格指定 data 数据源： --&gt;\n        &lt;my-table :data=&quot;goodslist&quot;&gt;\n            &lt;!-- 表格的标题 --&gt;\n            &lt;template v-slot:header&gt;\n                &lt;th&gt;#&lt;/th&gt;\n                &lt;th&gt;商品名称&lt;/th&gt;\n                &lt;th&gt;价格&lt;/th&gt;\n                &lt;th&gt;标签&lt;/th&gt;\n                &lt;th&gt;操作&lt;/th&gt;\n            &lt;/template&gt;\n            &lt;!-- 表格每行的单元格 --&gt;\n            &lt;template v-slot:body=&quot;&#123; row, index &#125;&quot;&gt;\n                &lt;td&gt;&#123;&#123; index + 1 &#125;&#125;&lt;/td&gt;\n                &lt;td&gt;&#123;&#123; row.goods_name &#125;&#125;&lt;/td&gt;\n                &lt;td&gt;￥&#123;&#123; row.goods_price &#125;&#125;&lt;/td&gt;\n                &lt;td&gt;&#123;&#123; row.tags &#125;&#125;&lt;/td&gt;\n                &lt;td&gt;\n                    &lt;button type=&quot;button&quot; class=&quot;btn btn-danger btn-sm&quot;&gt;删除\n                    &lt;/button&gt;\n                &lt;/td&gt;\n            &lt;/template&gt;\n        &lt;/my-table&gt;\n\n\n        自定义指令\n        在directives节点下声明私有自定义指令\n        v-color:opacity=&quot;&#123; color: 'white', text: 'hello!' &#125;&quot;\n        directives&#123;\n            color:&#123;\n                bind(el)&#123;\n                    el.style.color='red'\n                &#125;\n                update(el,binding)&#123;\n                    el.style.color=binging.value\n                &#125;\n            &#125;\n        &#125;\n        在使用自定义指令时，需要加上 v- 前缀 声明时不需要\n        在 template 结构中使用自定义指令时，可以通过等号（=）的方式，为当前指令动态绑定参数值\n        在声明自定义指令时，可以通过形参中的第二个参数binding来接收指令的参数值：\n        通过binding对象的.value属性获取动态的参数值 el.style.color=binding.value\n        bind函数只调用 1 次：当指令第一次绑定到元素时调用 当DOM更新时bind函数不会被触发 \n        update函数第一次不会调用 但会在每次DOM更新时被调用\n        函数简写 bind和update的逻辑相同时 可以简写为以下形式\n        color(el,binging)&#123;\n            el.style.color=binging.value\n        &#125;\n\n        全局自定义指令 一般都定义全局\n        Vue.directive('color',function(el,binging)&#123;\n            el.style.color=binging.value\n        &#125;)\n\n\n\n\n        eslint规则\n        禁止console 禁止debugger \n        不能有连续的空行 文件末尾要有空行 每行最后不能有多余的空格\n        \n        在main.js文件中\n        import axios from 'axios'\n        //全局配置axios的请求根路径\n        axios.defaults.baseURL=&quot;请求根路径&quot;\n        //把axios挂载到Vue.prototype上 供每个.vue的实例直接使用\n        Vue.prototype.$http=axios\n        //以后再.vue组件中组件要发起请求 直接调用this.$http.xxx\n        //但是把axios挂载到Vue.prototype上不利于API接口的复用\n\n\n\n\n        06\n        location.href返回#哈希地址 哈希地址会产生前进后退\n        简易路由\n        window.onhashchange=()=&gt;&#123;\n            console.log(location.hash)\n            switch(location.hash)&#123;\n                case '#/home':\n                    this.comName='Home'\n                    break\n                case '#/movie':\n                    this.comName='movie'\n                    break\n            &#125;\n        &#125;\n\n\n        vue.router插件\n        使用方法:\n        npm i vue-router@3.5.2 -S\n        1.导入Vue和VueRouter 2.Vue.use(VueRouter)\n        3.new一个实例 const router =new VueRouter()\n        4.向外共享 export default router\n        然后在main.js中导入router\n        new Vue(&#123;\n            render:h=&gt;(App),\n            router\n        &#125;).$mount('$app')\n        以后使用时可以一键生成\n\n        this.$route是路由对象\n        this.$router是导航对象\n\n        路由链接\n        使用 vue-router 提供的 &lt;router-link to=&quot;/home&quot;&gt;(不用加#)和 &lt;router-view&gt; 声明路由链接和占位符：\n        const router =new VueRouter(&#123;\n            routes:[\n                &#123;path:'/home',component:Home&#125;\n                &#123;path:'/movie',component:Movie&#125;\n                &#123;path:'/about',component:About&#125;\n            ]\n        &#125;)\n        路由重定向指的是：用户在访问地址 A 的时候，强制用户跳转到地址 C ，从而展示特定的组件页面。\n        通过路由规则的 redirect 属性，指定一个新的路由地址，可以很方便地设置路由的重定向：\n        &#123;path:'/',redirect:'/home'&#125;\n\n        嵌套路由 套娃\n        通过 children 属性声明子路由规则\n        &#123;\n            path:'/about',\n            component:About,\n            &lt;!-- redirect:'/about/tab1' --&gt;\n            children:[\n            &lt;!-- 默认子路由 在children数组中如果path为空字符串 则这条路由就是默认子路由 就不用重定向 --&gt;\n            &lt;!-- 子路由不用/开头 --&gt;\n                &#123;path:'',component:Tab1&#125;\n                &lt;!-- &#123;path:'tab1',component:Tab1&#125; --&gt;\n                &#123;path:'tab2',component:Tab2&#125;\n            ]\n        &#125;\n        \n        动态路由 :id\n        &#123;path:'/movie/:id',component:Movie&#125;\n        在Movie组件中获取id可以通过$route.params.id\n        也可以使用 props 接收路由参数 在组件的props中声明id变量\n        &#123;path:'/movie/:id',component:Movie,props:true&#125;\n        通过$route.query来获取查询参数 就是url?后面的值 fullPath是完整路径\n\n        声明式导航 链接 &amp; 编程式导航 js\n        this.$router\n        ① this.$router.push('hash 地址')\n        跳转到指定 hash 地址，并增加一条历史记录\n        ② this.$router.replace('hash 地址')  \n        跳转到指定的 hash 地址，并替换掉当前的历史记录\n        ③ this.$router.go(数值 n)\n        this.$router.back()/forward()\n        实现导航历史前进、后退 如果超过上限则不动\n        在行内使用编程式导航跳转的时候, this 必而要省略,否则报错\n\n        全局前置守卫\n        router.beforeEach((to,from,next)=&gt;&#123;&#125;)\n        每次发生路由的导航跳转时，都会触发全局前置守卫\n        必须调用next() \n        当前用户拥有后台主页的访问权限，直接放行：next()\n        当前用户没有后台主页的访问权限，强制其跳转到登录页面：next('/login')\n        当前用户没有后台主页的访问权限，不允许跳转到后台主页 停留在当前页面：next(false)\n        router.beforeEach((to,from,next)=&gt;&#123;\n            if(to.path==='/main')&#123;\n                const token = localStorage,getItem('key');\n                if(token)&#123;\n                    next()\n                &#125;else&#123;\n                    next('/login')\n                &#125;\n            &#125;else&#123;\n                next();\n            &#125;\n        &#125;)\n        \n\n\n\n        07 other\n        Vant\n        npm install vant -S\n        全引入\n        import Vue from 'vue';\n        import Vant from 'vant';\n        import 'vant/lib/index.css';\n        \n        Vue.use(Vant);\n\n        1.创建项目\n        2.初始化\n        3.加组件\n        4.实现功能\n\n        导入request模块\n        调用方法请求参数\n        //改进前\n        methods: &#123;\n            async initArticleList() &#123;\n                const &#123; data: res &#125; = await request.get('/articles', &#123;\n                    params: &#123;\n                        _page: this.page,\n                        _limit: this.limit\n                    &#125;\n                &#125;)\n                console.log(res)\n            &#125;\n        &#125;,\n        created() &#123;\n            this.initArticleList()\n        &#125;\n\n        如果请求多个服务器可以封装request来创建多个axios来对应服务器\n        如果多个页面要调用同一个接口会导致重复\n        就封装一个api 请求就封装到api中\n        //导入axios\n        import request from '@/utils/request.js'\n        //返回封装的API\n        export const getArticleListAPI = (_page, _limit) =&gt; &#123;\n            return request.get('/article', &#123;\n                params: &#123;\n                    _page,\n                    _limit\n                &#125;\n            &#125;)\n        &#125;\n\n        //按需导入API接口\n        import &#123; getArticleListAPI &#125; from '@/api/articleAPI.js'\n        //改进后\n        methods: &#123;\n            async initArticleList() &#123;\n                const &#123; data: res &#125; = await getArticleListAPI(this.page,this.limit)\n                console.log(res)\n            &#125;\n        &#125;,\n\n        覆盖第三方组件的样式 单页面\n        .home-container&#123;\n            padding: 46px 0 50px 0;\n            *&#123;\n                background-color: red;\n            &#125;\n            /deep/ *&#123;\n                color: blue;\n            &#125;\n        &#125;\n        全局 定制主题\n        //覆盖默认的less变量\n        import 'vant/lib/index.less'\n        // 这个文件是 vue-cli 创建出来的项目的配置文件\n        // 在 vue.config.js 这个配置文件中，可以对整个项目的打包、构建进行全局性的配置\n        \n        // webpack 在进行打包的时候，底层用到了 node.js\n        // 因此,在 vue.config.js 配置文件中，可以导入并使用 node.js 中的核心模块\n        const path = require('path')\n        const themePath = path.join(__dirname, './src/theme.less')\n        \n        module.exports = &#123;\n            publicPath: './',\n            css: &#123;\n                loaderOptions: &#123;\n                    less: &#123;\n                        modifyVars: &#123;\n                            // 直接覆盖变量\n                            // 'nav-bar-background-color': 'orange'\n                            // 或者可以通过 less 文件覆盖（文件路径为绝对路径）\n                            // ../ ./ theme.less\n                            // 从盘符开始的路径，叫做绝对路径 C:\\\\Users\\liulongbin\\\\theme.less\n                            hack: `true; @import &quot;$&#123;themePath&#125;&quot;;`\n                        &#125;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        \n\n\n        配置vscode\n        下载eslint和prettier插件\n        &quot;editor.formatOnSave&quot;: true,\n        //ESLint插件的配置\n        &quot;editor.codeActionsOnSave&quot;: &#123;\n        &quot;source.fixAll&quot;: true,\n        &#125;,\n        \n        //.prettierrc文件里写&#123;semi: false, singleQuote: true, printWidth: 300&#125;\n        &quot;prettier.configPath&quot;: &quot;C:\\\\Users\\\\Admin\\\\.prettierrc&quot;,\n        &quot;eslint.alwaysShowStatus&quot;: true,\n        &quot;prettier.trailingComma&quot;: &quot;none&quot;,\n        &quot;prettier.semi&quot;: false,\n        // 每行文字个数超出此限制将会被迫换行\n        &quot;prettier.printWidth&quot;: 300,\n        // 使用单引号替换双引号\n        &quot;prettier.singleQuote&quot;: true,\n        &quot;prettier.arrowParens&quot;: &quot;avoid&quot;,\n        // 设置 .vue 文件中，HTML代码的格式化插件\n        &quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,\n        &quot;vetur.ignoreProjectWarning&quot;: true,\n        &quot;vetur.format.defaultFormatterOptions&quot;: &#123;\n        &quot;js-beautify-html&quot;: &#123;\n        &quot;wrap_attributes&quot;: false\n        &#125;,\n        &quot;prettier&quot;: &#123;\n        &quot;printWidth&quot;: 300,\n        &quot;trailingComma&quot;: &quot;none&quot;,\n        &quot;semi&quot;: false,\n        &quot;singleQuote&quot;: true,\n        &quot;arrowParens&quot;: &quot;avoid&quot;\n        &#125;\n        &#125;,\n\n\n\n\n        &lt;h3&gt;NOTICE&lt;/h3&gt;\n        views放路由的组件 component放其他组件\n        路由规则和地址要一一对应\n        使用插件或者库想要实现更多功能先查看官方文档 尽量不要手写\n        属性值默认值为false 想改为true 直接写属性名就可以\n        提高axios请求的复用性 const axios1=axios.create(&#123;baseURL:'xx'&#125;)\n        如果重复调用接口 可以封装到模块中 放在API文件夹下\n        获取数据的函数函数名以init开头 API函数以API结尾\n        在使用组件的时候，如果某个属性名是“小驼峰”形式，则绑定属性的时候,建议改写成“连字符”格式 \n        例如cmtCount建议写成cmt-count props里面就接着写成cmtCount\n        eslint在porps中有有默认值的对象时 默认值为&#123;&#125;会报错 通过不设或者工厂函数来解决\n        在v-for中没id可以用索引 但是前面有复选框时必须用id\n        触发load事件时loading变为true就不会重复触发 在初始化请求数据时也会触发一次\n        所以一开始设置为true 在created中重新设为false\n        通过判断请求数据来判断是否到底\n        实现上拉加载\n        1.加页码 再请求 2.[...arr,...arr1]数据拼接 3.判断是否为最后一页\n\n        不在main.js中use(Vuex)在store.js中use(Vuex)就不会报错\n\n\n\n\n        &lt;h3&gt;after&lt;/h3&gt;\n        ref可以引用组件的方法\n\n        element-ui\n        \n        // 全局配置 axios\n        axios.defaults.baseURL = 'https://www.escook.cn'\n        Vue.prototype.$http = axios\n\n        proxy跨域代理\n        axios.defaults.baseURL = 'http://localhost:1245'\n        module.exports = &#123;\n            devServer: &#123;\n                port: 1245,\n                open: true,\n                proxy: 'https://www.escook.cn'\n            &#125;\n        &#125;\n\n        拦截器\n        let loadingInstance = null\n        axios.interceptors.request.use(config =&gt; &#123;\n            config.header.Authorization='Bearer xxx'\n            loadingInstance = Loading.service(&#123; fullscreen: true &#125;)\n            return config\n        &#125;)\n        \n        axios.interceptors.response.use(response =&gt; &#123;\n            loadingInstance.close()\n            return response\n        &#125;)\n\n\n    &lt;/xmp&gt;\n&lt;/pre&gt;\n</code></pre>\n<p>&lt;/body&gt;</p>\n<p>&lt;/html&gt;</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/11/27/qianduan/TCP%E5%8D%8F%E8%AE%AE/",
            "url": "http://example.com/2021/11/27/qianduan/TCP%E5%8D%8F%E8%AE%AE/",
            "title": "Vue面试题",
            "date_published": "2021-11-27T02:18:44.936Z",
            "content_html": "<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/cc9bc77b97b06659f29baec794f80ef2.png\" alt=\"cc9bc77b97b06659f29baec794f80ef2\" /></p>\n<h3 id=\"01tcp-和-udp-的区别\"><a class=\"anchor\" href=\"#01tcp-和-udp-的区别\">#</a> 01.TCP 和 UDP 的区别？</h3>\n<p><strong>TCP 是一个面向连接的，可靠的，基于字节流的传输层协议</strong></p>\n<p><strong>UDP 是一个面向无连接的传输层协议</strong></p>\n<p>和 UDP 相比，TCP 有三大核心特征：</p>\n<p>1.<strong> 面向连接</strong>。在客户端和服务端互相通信之前，TCP 需要三次握手建立连接，而 UDP 没有相应建立连接的过程</p>\n<p>2.<strong> 可靠性</strong>。可靠性体现在两方面，一是<strong>有状态</strong>，二是<strong>可控制</strong></p>\n<p>TCP 会精确记录哪些数据发送了，哪些数据被对面接收了，哪些数据未被对面接收，并且保证数据包按序到达。这是<strong>有状态</strong></p>\n<p>当意识到丢包或者网络环境不佳时，TCP 会根据具体情况调整自己的行为，控制自己的发送速度或者重发。这是<strong>可控制</strong></p>\n<p>3.<strong> 基于字节流</strong>。UDP 的数据传输是基于数据报的，这是因为仅仅只继承了 IP 层的特性，而 TCP 为了维护状态，把一个一个 IP 变成了字节流</p>\n<hr />\n<h3 id=\"02tcp-三次握手的过程-为什么不是两次不是四次\"><a class=\"anchor\" href=\"#02tcp-三次握手的过程-为什么不是两次不是四次\">#</a> 02.TCP 三次握手的过程。为什么不是两次？不是四次</h3>\n<p>TCP 的三次握手是为了确认双方的发送和接收能力</p>\n<h4 id=\"三次握手\"><a class=\"anchor\" href=\"#三次握手\">#</a> 三次握手</h4>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/d666610353017ffe36cf8eb3e2c24939.png\" alt=\"d666610353017ffe36cf8eb3e2c24939\" /></p>\n<p>从最开始双方都处于 <code>CLOSED</code>  状态，然后服务端开始监听某个端口，进入了 <code>LISTEN</code>  状态</p>\n<p>然后客户端主动发起连接，发送 <code>SYN</code> ，自己变成了 <code>SYN-SEND</code>  状态</p>\n<p>服务端接收到，并返回 <code>SYN</code>  和 <code>ACK</code> ，自己变成了 <code>SYN-RCVD</code>  状态</p>\n<p>之后客户端再发送 <code>ACK</code>  给服务端，自己变成了 <code>ESTABLISHED</code>  状态；服务端收到 <code>ACK</code>  之后，也变成了 <code>ESTABLISHED</code>  状态</p>\n<p>SYN 是需要消耗一个序列号的，下次发送对应的 ACK 序列号要加 1</p>\n<blockquote>\n<p>凡是需要对端确认的，一定会消耗 TCP 报文的序列号</p>\n</blockquote>\n<p>SYN 需要对端确认，而 ACK 不需要，因此 SYN 消耗一个序列号而 ACK 不需要</p>\n<h4 id=\"为什么不是两次\"><a class=\"anchor\" href=\"#为什么不是两次\">#</a> 为什么不是两次？</h4>\n<p>根本原因：无法确认客户端的接收能力</p>\n<p>如果是两次，客户端发送了 SYN 报文想握手，但是这个包<strong>滞留</strong>在了网络中，TCP 以为是丢包，于是重传，然后两次握手就建立了连接。</p>\n<p>看似没有问题，但是连接关闭后，如果这个<strong>滞留</strong>在网络中的包到达了服务端，由于是两次握手，服务端接收到<strong>滞留</strong>的包同时发送相应的数据包就建立了连接，可是这时客户端是不会响应的，但是服务端会一直等待客户端发送数据，导致了服务端连接资源的浪费</p>\n<h4 id=\"为什么不是四次\"><a class=\"anchor\" href=\"#为什么不是四次\">#</a> 为什么不是四次？</h4>\n<p>TCP 的三次握手是为了确认双方的发送和接收能力，四次自然也是可以，但是三次就足够了</p>\n<h4 id=\"三次握手过程中可以携带数据么\"><a class=\"anchor\" href=\"#三次握手过程中可以携带数据么\">#</a> 三次握手过程中可以携带数据么？</h4>\n<p>第三次握手时可以携带，前两次握手不能携带数据</p>\n<p>如果前两次握手能够携带数据，那么一旦有人想攻击服务器，那么他只需要在第一次握手中的 SYN 报文中放入大量的数据，那么服务器就势必会消耗更多的时间和内存空间去处理这些数据，增加了服务器被攻击的风险</p>\n<p>第三次握手的时候，客户端已经处于 <code>ESTABLISHED</code>  状态，并且已经确认了服务器的接收发送能力，这时相对安全，可以携带数据</p>\n<h4 id=\"同时发起握手会怎样\"><a class=\"anchor\" href=\"#同时发起握手会怎样\">#</a> 同时发起握手会怎样</h4>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/57f1cc50167613e9ce02641095b56dbe.png\" alt=\"57f1cc50167613e9ce02641095b56dbe\" /></p>\n<p>客户端和服务端同时给对面发送 <code>SYN</code> ，发完两者的状态皆变为 <code>SYN-SENT</code></p>\n<p>在各自收到对方的 <code>SYN</code>  之后，两者的状态都变成 <code>SYN-RCVD</code></p>\n<p>接着会回复对应的 <code>SYN+ACK</code> ，这个报文在对方接收之后会一起变成 <code>ESTABLISHED</code></p>\n<hr />\n<h3 id=\"03四次挥手的过程\"><a class=\"anchor\" href=\"#03四次挥手的过程\">#</a> 03. 四次挥手的过程</h3>\n<h4 id=\"四次挥手\"><a class=\"anchor\" href=\"#四次挥手\">#</a> 四次挥手</h4>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/982a7c427e18571f51b529e70c2a961b.png\" alt=\"982a7c427e18571f51b529e70c2a961b\" /></p>\n<p>刚开始双方都处于 <code>ESTABLISHED</code></p>\n<p>客户端要断开，向服务端发送 <code>FIN</code>  报文，然后客户端变成了 <code>FIN-WAIT-1</code>  状态，注意，客户端同时也变成 <code>half-close(半关闭)</code>  状态，即无法向服务端发送报文，只能接收</p>\n<p>服务端接收后向客户端发送 <code>ACK</code>  确认，变成了 <code>CLOSE-WAIT</code>  状态</p>\n<p>客户端接收到了客户端的确认，变成了 <code>FIN-WAIT2</code>  状态</p>\n<p>随后服务端向客户端发送 <code>FIN</code> ，自己进入 <code>LAST-ACK</code>  状态</p>\n<p>客户端收到服务端的 <code>FIN</code>  后，自己变成 <code>TIME-WAIT</code>  状态，然后向服务端发送 <code>ACK</code></p>\n<p>此时客户端需要等待足够长的时间，具体来说，还是 2 个 <code>MSL(Maximum Segment Lifetime,报文最大生存时间)</code> ，在这段时间如果客户端没有收到服务端的重发请求，那么就表示 <code>ACK</code>  成功送达，挥手介绍，否则客户端重发 <code>ACK</code></p>\n<h4 id=\"等待-2msl-的意义\"><a class=\"anchor\" href=\"#等待-2msl-的意义\">#</a> 等待 2MSL 的意义</h4>\n<p>如果不等待会怎样？</p>\n<p>如果不等待，客户端直接断开连接，当服务端还有很多数据包要发给客户端，且还在路上的时候，若客户端的端口此时刚好被新的应用，那么就接收到了无用数据包，导致数据包混乱，所以，最保险的做法是等服务端发完的数据包再启动新的应用</p>\n<ul>\n<li>1 个 MSL 确保四次挥手中主动关闭方最后的 ACK 报文能最终送达对端</li>\n<li>1 个 MSL 确保对端没有收到 ACK 而重传的 FIN 报文可以到达</li>\n</ul>\n<h4 id=\"为什么是四次挥手而不是三次\"><a class=\"anchor\" href=\"#为什么是四次挥手而不是三次\">#</a> 为什么是四次挥手而不是三次？</h4>\n<p>因为服务端在收到 <code>FIN</code>  时，往往不会立即反回 <code>FIN</code> ，必须等服务端此前所有的报文都发送完毕了，才能发 <code>FIN</code> 。因此先发一个 <code>ACK</code>  表示已经收到客户端的 <code>FIN</code> ，延长一段再发 <code>FIN</code> 。</p>\n<p>如果是三次挥手会有什么问题？</p>\n<p>等于说服务端把 <code>ACK</code>  和 <code>FIN</code>  的发送合并为一次挥手，这会造成长时间的延迟，导致客户端误以为 <code>FIN</code>  没有到达服务端，从而不断重发 <code>FIN</code></p>\n<h4 id=\"同时关闭会怎样\"><a class=\"anchor\" href=\"#同时关闭会怎样\">#</a> 同时关闭会怎样？</h4>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/19ebe3ed769f299bd212544892b97a0f.png\" alt=\"19ebe3ed769f299bd212544892b97a0f\" /></p>\n<hr />\n<h3 id=\"04半连接队列和-syn-flood-攻击的关系\"><a class=\"anchor\" href=\"#04半连接队列和-syn-flood-攻击的关系\">#</a> 04. 半连接队列和 SYN Flood 攻击的关系</h3>\n<p>三次握手前，服务端的状态从 <code>CLOSED</code>  变成 <code>LISTEN</code> ，同时在内部创建了两个队列：<strong>半连接队列</strong>和<strong>全连接队列</strong>，即 <code>SYN</code>  队列和 <code>ACCEPT</code>  队列</p>\n<h4 id=\"半连接队列\"><a class=\"anchor\" href=\"#半连接队列\">#</a> 半连接队列</h4>\n<p>当客户端发送 <code>SYN</code>  到服务端，服务端收到后回复 <code>ACK</code>  和 <code>SYN</code> ，状态由 <code>LISTEN</code>  变为 <code>SYN-RCVD</code> ，此时这个连接就会被推入<strong> SYN 队列</strong>，也就是<strong>半连接队列</strong></p>\n<h4 id=\"全连接队列\"><a class=\"anchor\" href=\"#全连接队列\">#</a> 全连接队列</h4>\n<p>当客户端返回 <code>ACK</code> ，服务端接收后，三次握手完成。这个时候连接等待被具体的应用取走，在被取走前，它会被推入另一个 TCP 维护的队列，也就是<strong>全连接队列 (Accept Queue)</strong></p>\n<h4 id=\"syn-flood-攻击原理\"><a class=\"anchor\" href=\"#syn-flood-攻击原理\">#</a> SYN Flood 攻击原理</h4>\n<p>SYN Flood 属于典型的 DoS/DDoS 攻击。其攻击原理就是用客户端再短时间内伪造大量不存在的 IP 地址，并向服务端疯狂发送 <code>SYN</code> 。对于服务端而言，会产生两个威胁的后果：</p>\n<ol>\n<li>处理大量的 <code>SYN</code>  包并返回对应的 <code>ACK</code> ，势必有大量的连接处于 <code>SYN-RCVD</code>  状态，从而占满整个<strong>半连接队列</strong>，无法处理正常的请求</li>\n<li>由于是不存在的 IP，服务端长时间收不到客户端的 <code>ACK</code> ，会导致服务端不断重发数据，直到耗尽服务端的资源</li>\n</ol>\n<h4 id=\"如何应对-syn-flood-攻击\"><a class=\"anchor\" href=\"#如何应对-syn-flood-攻击\">#</a> 如何应对 SYN Flood 攻击？</h4>\n<ol>\n<li>增加 SYN 连接，也就是增加半连接队列的容量</li>\n<li>减少 SYN+ACK 重试次数，避免大量的超时重发</li>\n<li>利用 SYN Cookie 技术，在服务端收到 <code>SYN</code>  后不立即分配连接资源，而是根据这个 <code>SYN</code>  计算出一个 <code>Cookie</code> ，连同第二次握手一起回复给客户端，在客户端回复 <code>ACK</code>  的时候带上这个 <code>Cookie</code>  值，服务端验证 <code>Cookie</code>  的合法性之后才会分配资源</li>\n</ol>\n<hr />\n<h3 id=\"05tcp-报文的头部字段\"><a class=\"anchor\" href=\"#05tcp-报文的头部字段\">#</a> 05.TCP 报文的头部字段</h3>\n<p>报文头部结构如下 (单位为字节)：</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/9309f3c439fac129c56b298d7ab7f992.png\" alt=\"9309f3c439fac129c56b298d7ab7f992\" /></p>\n<h4 id=\"源端口-目标端口\"><a class=\"anchor\" href=\"#源端口-目标端口\">#</a> 源端口、目标端口</h4>\n<p>如果标识唯一的一个连接？答案是 TCP 连接的 <code>四元组</code>  —— 源 IP、源端口、目标 IP、目标端口</p>\n<p>那 TCP 报文为什么没有源 IP 和目标 IP 呢？这是因为在 IP 层就已经处理了 IP。TCP 只需要记录两者的端口即可</p>\n<h4 id=\"序列号\"><a class=\"anchor\" href=\"#序列号\">#</a> 序列号</h4>\n<p>即 <code>Sequence number</code> ，指的是本报文第一个字节的序列号</p>\n<p>从图中可以看出，序列号是一个长为 4 个字节，也就是 32 位的无符号整数，表示范围为 0 ~ 2^32 - 1。如果到达最大值了后就循环到 0</p>\n<p>序列号在 TCP 通信的过程中有两个作用：</p>\n<ol>\n<li>在 SYN 报文中交换彼此的初始序列号</li>\n<li>保证数据包按正确的顺序组装</li>\n</ol>\n<h4 id=\"isn初始序列号\"><a class=\"anchor\" href=\"#isn初始序列号\">#</a> ISN (初始序列号)</h4>\n<p>即 <code>Initial Sequence Number(初始序列号)</code> ，在三次握手的过程当中，双方会用 <code>SYN</code>  报文来交换彼此的 <code>ISN</code></p>\n<p><code>ISN</code>  并不是一个固定的值，而是每 4ms 加一，溢出则回到 0，这个算法使得猜测 <code>ISN</code>  变得很困难。为什么这么做呢？</p>\n<p>如果 <code>ISN</code>  被攻击者预测到，要知道 IP 和源端口号都是很容易伪造的，当攻击者猜测到 <code>ISN</code>  之后，直接伪造一个 <code>RST</code>  后，就可以强制关闭连接，这是非常危险的</p>\n<p>而动态增长的 <code>ISN</code>  大大提高了猜测 <code>ISN</code>  的难度</p>\n<h4 id=\"确认号\"><a class=\"anchor\" href=\"#确认号\">#</a> 确认号</h4>\n<p>即 <code>ACK(Acknowlegment number)</code> 。用于告诉对方下一个期望接收的序列号，小于<strong> ACK</strong> 的所有字节都已经收到</p>\n<h4 id=\"标记号\"><a class=\"anchor\" href=\"#标记号\">#</a> 标记号</h4>\n<p>常见的标记有 <code>SYN</code> , <code>ACK</code> , <code>FIN</code> , <code>RST</code> , <code>PSH</code></p>\n<p><code>SYN</code>  和 <code>ACK</code>  已经在上文中说过，后三个解释如下:</p>\n<p><code>FIN</code> ： 即 Finish，表示发送方准备断开连接。</p>\n<p><code>RST</code> ：即 Reset，用来强制断开连接。</p>\n<p><code>PSH</code> ： 即 Push，告知对方这些数据包收到后应该马上交给上层的应用，不能缓存。</p>\n<h4 id=\"窗口大小\"><a class=\"anchor\" href=\"#窗口大小\">#</a> 窗口大小</h4>\n<p>占用两个字节，也就是 16 位，但实际上是不够用的。因此 TCP 引入了窗口缩放的选项，作为窗口缩放的比例因子，这个比例因子的范围在 0~14，比例因子可以将窗口的值扩大为原来的 2^n 次方</p>\n<h4 id=\"校验和\"><a class=\"anchor\" href=\"#校验和\">#</a> 校验和</h4>\n<p>占用两个字节，防止传输过程中数据包有损坏，如果遇到校验和有差错的报文，TCP 直接丢弃，等待重传</p>\n<h4 id=\"可选项\"><a class=\"anchor\" href=\"#可选项\">#</a> 可选项</h4>\n<p>可选项格式如下</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/417e77f83b34540a5b170e5b898b08f8.png\" alt=\"417e77f83b34540a5b170e5b898b08f8\" /></p>\n<p>常用的可选项有以下几个：</p>\n<ul>\n<li>TimeStamp:TCP 时间戳，后文有详细介绍</li>\n<li>MSS: 指的是 TCP 允许对方接收的最大报文段</li>\n<li>SACK: 选择确认选项</li>\n<li>Window Scale: 窗口缩放选项</li>\n</ul>\n<hr />\n<h3 id=\"06tcp-快速打开的原理tfo\"><a class=\"anchor\" href=\"#06tcp-快速打开的原理tfo\">#</a> 06.TCP 快速打开的原理 (TFO)</h3>\n<p>优化后的 TCP 握手流程，也就是 TCP 快速打开 (TCP Fast Open，即 TFO)</p>\n<p>优化是利用 SYN Cookie 来实现的 TFO</p>\n<h4 id=\"tfo-流程\"><a class=\"anchor\" href=\"#tfo-流程\">#</a> TFO 流程</h4>\n<p><strong>首轮三次握手</strong></p>\n<p>首先客户端发送 <code>SYN</code>  给服务端，服务端收到</p>\n<p>此时，服务端不是立即返回 <code>SYN+ACK</code> ，而是通过计算得到一个 <code>SYN Cookie</code> ，将这个 <code>Cookie</code>  放到 TCP 报文的 <code>Fast Open</code>  选项中，然后返回给客户端</p>\n<p>客户端拿到这个 <code>Cookie</code>  的值并缓存下来。后面正常完成三次握手</p>\n<p><strong>后续的三次握手</strong></p>\n<p>在后续的三次握手中，客户端会将之前缓存的 <code>Cookie</code> 、 <code>SYN</code>  和 <code>HTTP请求</code> 发送给服务端，服务端验证了 <code>Cookie</code>  的合法性，如果不合法直接丢弃；如果合法，就正常返回 <code>SYN+ACK</code></p>\n<p>重点来了，现在服务端就可以向客户端发 HTTP 响应了！这是最显著的改变，三次握手还没有建立，仅仅验证了 <code>Cookie</code>  的合法性就可以返回 HTTP 响应</p>\n<p>当然，客户端的 <code>ACK</code>  还得正常传过来，不然怎么叫三次握手</p>\n<p>流程如下：</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/0ff20d5a9e4295e773c1380a82954afd.png\" alt=\"0ff20d5a9e4295e773c1380a82954afd\" /></p>\n<p><strong>注意</strong>：客户端最后握手的 <code>ACK</code>  不需要等到服务端的 HTTP 响应送达才发送，两者没有任何关系</p>\n<h4 id=\"tfo-的优势\"><a class=\"anchor\" href=\"#tfo-的优势\">#</a> TFO 的优势</h4>\n<p>TFO 的优势并不在首轮三次握手，而在于后面的握手，在拿到客户端的 <code>Cookie</code>  并验证通过以后，可以直接返回 HTTP 响应，充分利用了<strong> 1 个 RTT</strong> (Round-Trip Time，往返时延) 的时间<strong>提前进行数据传输</strong>，积累起来还是一个比较大的优势</p>\n<hr />\n<h3 id=\"07tcp-报文中的时间戳\"><a class=\"anchor\" href=\"#07tcp-报文中的时间戳\">#</a> 07.TCP 报文中的时间戳</h3>\n<p><code>timestamp</code>  是 TCP 报文首部的一个可选项，一共占 10 个字节，格式如下：</p>\n<pre><code class=\"language-HTTP\">kind(1 字节) + length(1 字节) + info(8 个字节)\n</code></pre>\n<p>其中 kind = 8，length = 10，info 有两部分构成：<strong>timestamp</strong> 和<strong> timestamp echo</strong>，各占 4 个字节</p>\n<p>TCP 的时间戳主要解决两大问题：</p>\n<ul>\n<li>计算 往返时延 RTT (Round-Trip Time)</li>\n<li>防止序列号的回绕问题</li>\n</ul>\n<h4 id=\"计算-往返时延-rtt\"><a class=\"anchor\" href=\"#计算-往返时延-rtt\">#</a> 计算 往返时延 RTT</h4>\n<p>在没有时间戳的时候，计算 RTT 会遇到如下图所示的问题</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/d3d95220996ad83cbafd120a31a84d30.png\" alt=\"d3d95220996ad83cbafd120a31a84d30\" /></p>\n<p>如果以第一次发包为开始时间的话，就会出现左图的问题，RTT 明显偏大</p>\n<p>如果以第二次发包为开始时间的话，就会导致右图的问题，RTT 明显偏小</p>\n<p>实际上无论开始时间以第一次发包还是第二次发包为准，都是不准确的</p>\n<p>这个时候引入时间戳就很好的解决了这个问题</p>\n<p>比如现在 a 向 b 发送一个报文 s1，b 向 a 回复一个含 <code>ACK</code>  的报文 s2，那么：</p>\n<ul>\n<li>\n<p>**step1：**a 向 b 发送的时候， <code>timestamp</code>  中存放的内容就是 a 主机发送时的内核时刻 <code>ta1</code></p>\n</li>\n<li>\n<p>**step2：**b 向 a 回复 s2 报文时， <code>timestamp</code>  中存放的是 b 主机的时刻 <code>tb</code> ， <code>timestamp echo</code>  字段为从 s1 报文中解析出来的 <code>ta1</code></p>\n</li>\n<li>\n<p>**step3：**a 收到 b 的 s2 报文之后，此时 a 主机的内核时刻是 <code>ta2</code> ，而在 s2 报文中的 <code>timestamp echo</code>  选项可以得到 <code>ta1</code> ，也就是 s2 对应的报文最初的发送时刻。然后直接用 <code>ta2</code> - <code>ta1</code>  就得到了 RTT 的值</p>\n</li>\n</ul>\n<h4 id=\"防止序列号的回绕问题\"><a class=\"anchor\" href=\"#防止序列号的回绕问题\">#</a> 防止序列号的回绕问题</h4>\n<p>现在我们来模拟一下这个问题。</p>\n<p>序列号的范围其实是在 0 ~ 2 ^ 32 - 1, 为了方便演示，我们缩小一下这个区间，假设范围是 0 ~ 4，那么到达 4 的时候会回到 0。</p>\n<table>\n<thead>\n<tr>\n<th>第几次发包</th>\n<th>发送字节</th>\n<th>对应序列号</th>\n<th>状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0 ~ 1</td>\n<td>0 ~ 1</td>\n<td>成功接收</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1 ~ 2</td>\n<td>1 ~ 2</td>\n<td>滞留在网络中</td>\n</tr>\n<tr>\n<td>3</td>\n<td>2 ~ 3</td>\n<td>2 ~ 3</td>\n<td>成功接收</td>\n</tr>\n<tr>\n<td>4</td>\n<td>3 ~ 4</td>\n<td>3 ~ 4</td>\n<td>成功接收</td>\n</tr>\n<tr>\n<td>5</td>\n<td>4 ~ 5</td>\n<td>0 ~ 1</td>\n<td>成功接收，序列号从 0 开始</td>\n</tr>\n<tr>\n<td>6</td>\n<td>5 ~ 6</td>\n<td>1 ~ 2</td>\n<td>？？？</td>\n</tr>\n</tbody>\n</table>\n<p>假设在第 6 次的时候，之前滞留在网络中的包送达了，那么就会有两个序列号为 <code>1 ~ 2 </code> 的数据包，无法区分，这时候就产生了序列号的回绕问题</p>\n<p>那么用 <code>timestamp</code>  就能很好的解决这个问题，因为每次发包的时候都会将发包机器当时的内核时间记录在报文中，即使两次发包的序列号相同，时间戳也不可能相同，这样子就可以区分开两个数据包了</p>\n<hr />\n<h3 id=\"08tcp-的超时重连\"><a class=\"anchor\" href=\"#08tcp-的超时重连\">#</a> 08.TCP 的超时重连</h3>\n<p>TCP 具有超时重连的机制，即每个一段时间没有等到数据包的回复时，就重传这个数据包</p>\n<p>这个重传间隔是如何来计算的呢？</p>\n<p>这个重传间隔也叫做<strong>超时重传时间 (Retransmission TimeOut，简称为 RTO)</strong>，它的计算跟上一节的<strong> RTT</strong> 密切相关。这我们将介绍两种重要的方法，一个是经典方法，一个是标准方法</p>\n<h4 id=\"经典方法\"><a class=\"anchor\" href=\"#经典方法\">#</a> 经典方法</h4>\n<p>经典方法引入了一个新的概念 ——<strong>SRTT (Smoothed Round Trip Time，即平滑往返时间)</strong>，每产生一次新的 RTT，就会根据一定的算法对 SRTT 进行更新，具体而言，计算方式如下 (SRTT 的初始值为 0)</p>\n<pre><code class=\"language-HTTP\">SRTT =  (α * SRTT) + ((1 - α) * RTT)\n</code></pre>\n<p>其中，α 是<strong>平滑因子</strong>，建议值是 <code>0.8</code> ，范围是 <code>0.8 ~ 0.9</code></p>\n<p>拿到 SRTT，我们就可以计算 RTO 的值了：</p>\n<pre><code class=\"language-HTTP\">RTO = min(ubound, max(lbound, β * SRTT))\n</code></pre>\n<p>β 是加权因子，一般为 <code>1.3 ~ 2.0</code> ， <strong>lbound</strong> 是下界，<strong>ubound</strong> 是上界。</p>\n<p>这个算法的过程还算是简单，但是也存在着一定的局限，就是在 RTT 稳定的地方表现还可以，而在 RTT 变化较大的地方就不行了，因为平滑因子 α 的范围是 <code>0.8 ~ 0.9</code> ，RTT 对于 RTO 的影响太小</p>\n<h4 id=\"标准方法\"><a class=\"anchor\" href=\"#标准方法\">#</a> 标准方法</h4>\n<p>为了解决经典方法对于 RTT 变化不敏感的问题，后面又引出了标准方法，也叫 <code>Jacobson / Karels 算法</code></p>\n<p>一共三步</p>\n<p>** 第一步：** 计算 <code>SRTT</code> ，公式如下：</p>\n<pre><code class=\"language-HTTP\">SRTT = (1 - α) * SRTT + α * RTT\n</code></pre>\n<p>注意这个时候的 <code>α</code>  就和经典方法中的 <code>α</code>  取值不同了，建议值是 <code>1/8</code> ，也就是 <code>0.125</code></p>\n<p>** 第二步：** 计算 <code>RTTVAR</code> （Round-Trip Time Variation）这个中间变量</p>\n<pre><code class=\"language-HTTP\">RTTVAR = (1 - β) * RTTVAR + β * (|RTT - SRTT|)\n</code></pre>\n<p>β 的建议值为 <code>0.25</code> 。这个值是这个算法中出彩的地方，也就是说，它记录了最新的 RTT 与当前 SRTT 之间的差值，给我们在后续感知到 RTT 的变化提供了抓手</p>\n<p>** 第三步：** 计算最终的 <code>RTO</code></p>\n<pre><code class=\"language-HTTP\">RTO = µ * SRTT + ∂ * RTTVAR\n</code></pre>\n<p><code>µ</code>  建议值取 <code>1</code> ， <code>∂</code> 建议值取 <code>4</code></p>\n<p>这个公式在 SRTT 的基础上加上了最新 RTT 与它的偏移，从而很好的感知了 RTT 的变化，这种算法下，RTO 与 RTT 变化的差值关系更加密切</p>\n<hr />\n<h3 id=\"09tcp-的流量控制\"><a class=\"anchor\" href=\"#09tcp-的流量控制\">#</a> 09.TCP 的流量控制</h3>\n<p>对于发送端和接收端而言，TCP 需要把发送的数据放到<strong>发送缓存区</strong>，将接收的数据放到<strong>接收缓存区</strong></p>\n<p>而流量控制所要做的事情，就是在通过接收缓存区的大小，控制发送端的发送。如果对方的接收缓存区满了，就不能在继续发送了</p>\n<p>要具体理解流量控制，首先需要了解 <code>滑动窗口</code> 的概念</p>\n<h4 id=\"滑动窗口\"><a class=\"anchor\" href=\"#滑动窗口\">#</a> 滑动窗口</h4>\n<p>TCP 滑动窗口分为两种：<strong>发送窗口</strong>和<strong>接收窗口</strong></p>\n<h4 id=\"发送窗口\"><a class=\"anchor\" href=\"#发送窗口\">#</a> 发送窗口</h4>\n<p>发送端的滑动窗口结构如下</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/4e618cbb8649a1617fc5594f40a23632.png\" alt=\"4e618cbb8649a1617fc5594f40a23632\" /></p>\n<p>其中包含四大部分：</p>\n<ul>\n<li>已发送且已接收</li>\n<li>已发送但未确认</li>\n<li>未发送但可发送</li>\n<li>未发送且不可发送</li>\n</ul>\n<p>其中有一些重要的概念，我标注在图中：</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/364c7d48f0d1e503a7de1af5879b47e2-16353120181391.png\" alt=\"364c7d48f0d1e503a7de1af5879b47e2\" /></p>\n<p>发送窗口就是图中被框住的范围。SND 即 <code>send</code> ，WND 即 <code>window</code> ，UNA 即 <code>unacknowledged</code> ，表示未被确认，NXT 即 <code>next</code> ，表示下一个发送的位置</p>\n<h4 id=\"接收窗口\"><a class=\"anchor\" href=\"#接收窗口\">#</a> 接收窗口</h4>\n<p>接收端的窗口结构如下：</p>\n<p><img data-src=\"/images/TCP%E5%8D%8F%E8%AE%AE.assets/06c5ca9fe18976392fce8f158bb75249.png\" alt=\"06c5ca9fe18976392fce8f158bb75249\" /></p>\n<p>REV 即 <code>receive</code> ，NXT 表示下一个接收的位置，WND 表示接收窗口大小。</p>\n<h4 id=\"流量控制过程\"><a class=\"anchor\" href=\"#流量控制过程\">#</a> 流量控制过程</h4>\n<p>这里我们不用太复杂的例子，以一个最简单的来回来模拟一下流量控制的过程，方便大家的理解</p>\n<p>首先双方三次握手，初始化各自的窗口大小，均为 200 个字节</p>\n<p>假如当前发送端给接收端发送 100 个字节，那么此时对应发送端而言，SND.NXT 当然要右移 100 个字节，也就是说当前的可用窗口减少了 100 个字节，这很好理解</p>\n<p>现在这 100 个到达了接收端，被放到接收端的缓冲队列中。不过此时由于大量负载的原因，接收端处理不了这么多字节，只能处理 40 个字节即被应用取走 40 个字节，剩下 <code>60</code>  个字节被留在了缓冲队列中</p>\n<p>注意了，此时接收端的情况是处理能力不足，你发送端给我少发点，所以此时接收端的接收窗口应该缩小，具体来说，缩小 60 个字节，由 200 个字节变成 140 个字节，因为缓冲队列还有 60 个字节没被应用拿走 (还差多少就减少多少)</p>\n<p>因此，接收端会在 ACK 的报文头部带上缩小后的滑动窗口 140 字节，发送端对应的调整发送窗口的大小为 140 字节</p>\n<p>此时对应发送端而言，已发送且已接收的部分增加 40 字节，也就是 SND.UNA 右移 40 个字节，同时<strong>发送窗口</strong>缩小为 140 个字节</p>\n<p>这就是<strong>流量控制</strong>的过程。尽管回合再多，整个控制的过程和原理是一样的</p>\n<hr />\n<h3 id=\"10tcp-的拥塞控制\"><a class=\"anchor\" href=\"#10tcp-的拥塞控制\">#</a> 10.TCP 的拥塞控制</h3>\n<p>上一节所说的<strong>流量控制</strong>发送在发送端和接收端之间，并没有考虑到整个网络环境的影响，如果说当前网络特别差，特别容易丢包，那么发送端就应该注意一些了。而这，也正是 <code>拥塞控制</code> 需要处理的问题</p>\n<p>对于拥塞控制来说，TCP 每条连接都需要维护两个核心状态：</p>\n<ul>\n<li>拥塞窗口 (Congestion Window ，cwnd)</li>\n<li>慢启动阈值 (Slow Start Threshold，ssthresh)</li>\n</ul>\n<p>涉及的算法有这几个：</p>\n<ul>\n<li>慢启动</li>\n<li>拥塞避免</li>\n<li>快速重传和快速恢复</li>\n</ul>\n<p>接下来，我们就来一一拆解这些状态和算法。首先，从拥塞窗口说起</p>\n<h4 id=\"拥塞窗口\"><a class=\"anchor\" href=\"#拥塞窗口\">#</a> 拥塞窗口</h4>\n<p>拥塞窗口 (Congestion Window ，cwnd) 是指目前自己还能传输的数据量大小</p>\n<p>那么之前介绍了接收窗口的概念，两者有什么区别呢？</p>\n<ul>\n<li>接收窗口 (rwnd) 是 <code>接收端</code> 给的限制</li>\n<li>拥塞窗口 (cwnd) 是 <code>发送端</code> 的限制</li>\n</ul>\n<p>限制谁呢？</p>\n<p>限制的是 <code>发送窗口</code> 的大小</p>\n<p>有了这两个窗口，如何来计算 <code>发送窗口</code> ？</p>\n<pre><code class=\"language-HTTP\">发送窗口 = min(rwnd, cwnd)\n</code></pre>\n<p>取两者的较小值，而拥塞控制，就是来控制 cwnd 的变化</p>\n<h4 id=\"慢启动\"><a class=\"anchor\" href=\"#慢启动\">#</a> 慢启动</h4>\n<p>刚开始进入传输数据的时候，是不知道现在的网络到底是稳定还是拥堵的，如果做的太激进，发包太急，就会疯狂丢包，造成雪崩式的网络灾难</p>\n<p>因此，拥塞控制首先就是要采用一种保守的算法来慢慢的适应整个网络，这种算法叫 <code>慢启动</code> 。运作过程如下：</p>\n<ul>\n<li>首先，三次握手，双方宣告自己的接收窗口大小</li>\n<li>双方初始化自己的<strong>拥塞窗口</strong> (cwnd) 的大小</li>\n<li>在开始传输的一段时间，发送端每收到一个 ACK，拥塞窗口大小加 1，也就是说，每经过一个 RTT，cwnd 翻倍。如果说初始窗口为 10，那么第一轮 10 个报文传完且发送端收到 ACK 后，cwnd 变为 20，第二轮变为 40，第三轮变为 80，以此类推</li>\n</ul>\n<p>难道就这么无止境的翻倍下去？当然不可能。它的阈值叫做<strong>慢启动阈值</strong>，当 cwnd 到达这个阈值后，就好比踩了刹车</p>\n<p>在到达阈值后，如何控制 cwnd 的大小呢？</p>\n<p>这就是拥塞避免做的事情了</p>\n<h4 id=\"拥塞避免\"><a class=\"anchor\" href=\"#拥塞避免\">#</a> 拥塞避免</h4>\n<p>原来每收到一个 ACK，cwnd 加 1，现在到达阈值了，cwnd 只能加这么一点：<strong>1 / cwnd</strong>。这样一轮 RTT 下来，收到 cwnd 个 ACK，那最后拥塞窗口的大小 cwnd 总共才增加 1</p>\n<p>也就是说，以前一个 RTT 下来， <code>cwnd</code>  翻倍，现在 <code>cwnd</code>  只是增加 1 而已</p>\n<p>当然，<strong>慢启动</strong>和<strong>拥塞避免</strong>是一起作用的，是一体的</p>\n<h4 id=\"快速重传和快速回复\"><a class=\"anchor\" href=\"#快速重传和快速回复\">#</a> 快速重传和快速回复</h4>\n<p><strong>快速重传</strong></p>\n<p>在 TCP 传输过程中，如果发生了丢包，即接收端发现数据段不是按序到达的时候，接收端的处理是重复发送之前的 ACK</p>\n<p>比如第 5 个包丢了，即使第 6、7 个包到达了接收端，接收端也一律返回第 4 个包的 ACK。当发送端收到 3 个重复的 ACK 时，意识到丢包了，于是马上进行重传，不用等到一个 RTO 的时间到了才重传</p>\n<p>这就是<strong>快速重传</strong>，它解决的是<strong>是否需要重传</strong>的问题</p>\n<p><strong>快速恢复</strong>（？）</p>\n<p>当然，发送端收到三次重复 ACK 之后，发现丢包，觉得现在的网络有些拥塞了，自己会进入<strong>快速恢复</strong>阶段</p>\n<p>在这个阶段，发送端如下改变：</p>\n<ul>\n<li>拥塞阈值降低为 cwnd 的一半</li>\n<li>cwnd 的大小变为拥塞阈值</li>\n<li>cwnd 线性增加</li>\n</ul>\n<p>以上就是 TCP 拥塞控制的经典算法：<strong>慢启动、拥塞避免、快速重传和快速恢复</strong></p>\n<hr />\n<h3 id=\"11nagle-算法和延迟确认\"><a class=\"anchor\" href=\"#11nagle-算法和延迟确认\">#</a> 11.Nagle 算法和延迟确认</h3>\n<h4 id=\"nagle-算法\"><a class=\"anchor\" href=\"#nagle-算法\">#</a> Nagle 算法</h4>\n<p>试想一个场景，发送端不停的给接收端发很小的包，一次只发 1 个字节，那么发 1 千个字节需要发 1000 次。这种频繁的发送是存在问题的，不光是传输的时延消耗，发送和确认本身也是需要耗时的，频繁的发送接收带来了巨大的时延</p>\n<p>而避免小包的频繁发送，这就是<strong> Nagle 算法</strong>要做的事</p>\n<p>具体来说，Nagle 算法的规则如下：</p>\n<ul>\n<li>当第一次发送数据时不用等待，就算是 1byte 的小包也立即发送</li>\n<li>后面发送满足下面条件之一就可以发送：\n<ul>\n<li>数据包大小达到最大段大小 (Max Segment Size，即 MSS)</li>\n<li>之前所有包的 ACK 都已接收到</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"延迟确认\"><a class=\"anchor\" href=\"#延迟确认\">#</a> 延迟确认</h4>\n<p>试想一个场景，当我收到了发送端的一个包，然后在极短的时间内又接收到了第二个包，那是要一个个回复，还是稍等一下，把两个包的 ACK 合并后一起回复呢？</p>\n<p><strong>延迟确认</strong> (delayed ack) 所做的事情就是后者，稍稍延迟，然后合并 ACK，最后才回复给发送端。TCP 要求这个延迟的时延必须小于 500ms，一般操作系统实现都不会超过 200ms</p>\n<p>不过主要的是，有一些场景是不能延迟确认的，收到了就要马上回复：</p>\n<ul>\n<li>接收到了大于一个 frame 的报文，且需要调整窗口大小</li>\n<li>TCP 处于 quickack 模式 (通过 <code>tcp_in_quickack_mode</code>  设置)</li>\n<li>发现了乱序包</li>\n</ul>\n<h4 id=\"两者一起使用会怎样\"><a class=\"anchor\" href=\"#两者一起使用会怎样\">#</a> 两者一起使用会怎样？</h4>\n<p>前者意味着延迟发送，后者意味着延迟接收，会造成更大的延迟，产生性能问题。</p>\n<hr />\n<h3 id=\"12tcp-的-keep-alive\"><a class=\"anchor\" href=\"#12tcp-的-keep-alive\">#</a> 12.TCP 的 keep-alive</h3>\n<p>大家都听说过 HTTP 的 <code>keep-alive</code> ，不过 TCP 层面也是有 <code>keep-alive</code>  机制，而且跟应用层不太一样</p>\n<p>试想一个场景，当有一方因为网络故障或者宕机导致连接失效，由于 TCP 并不是一个轮询的协议，在下一个数据包到达之前，对端对连接失效的情况是一无所知的</p>\n<p>这个时候就出现了 <code>keep-alive</code> ，它的作用就是探测对端的连接有没有失效</p>\n<p>在 Linux 下，可以这样查看相关的配置</p>\n<pre><code>sudo sysctl -a | grep keepalive\n\n// 每隔 7200 s 检测一次\nnet.ipv4.tcp_keepalive_time = 7200\n// 一次最多重传 9 个包\nnet.ipv4.tcp_keepalive_probes = 9\n// 每个包的间隔重传间隔 75 s\nnet.ipv4.tcp_keepalive_intvl = 75\n</code></pre>\n<p>不过，现状是大部分的应用并没有默认开启 TCP 的 <code>keep-alive</code>  选项，为什么？</p>\n<p>站在应用的角度:</p>\n<ul>\n<li>7200s 也就是两个小时检测一次，时间太长</li>\n<li>时间再短一些，也难以体现其设计的初衷，即检测长时间的死连接</li>\n</ul>\n<p>因此是一个比较尴尬的设计。</p>\n",
            "tags": [
                "前端",
                "Vue",
                "前端",
                "Vue"
            ]
        },
        {
            "id": "http://example.com/2021/11/27/qianduan/vue%E9%9D%A2%E8%AF%95%E9%A2%98/",
            "url": "http://example.com/2021/11/27/qianduan/vue%E9%9D%A2%E8%AF%95%E9%A2%98/",
            "title": "Vue面试题",
            "date_published": "2021-11-27T01:47:08.289Z",
            "content_html": "<h3 id=\"1-说说你对-spa-单页面的理解它的优缺点分别是什么\"><a class=\"anchor\" href=\"#1-说说你对-spa-单页面的理解它的优缺点分别是什么\">#</a> 1. 说说你对 SPA 单页面的理解，它的优缺点分别是什么？</h3>\n<hr />\n<p>SPA（single-page application）仅在 Web 页面初始化时加载相应的 HTML，CSS 和 JS。一旦页面加载完成，SPA 不会因为用户的操作而进行页面的重新加载或跳转，取而代之的是利用路由机制实现 HTML 内容的切换，UI 和用户的交互，避免页面的重新加载</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染</li>\n<li>基于上面一点，SPA 相对对服务器压力小</li>\n<li>前后端职责分离，架构清晰，前端进行逻辑交互，后端负责数据处理</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>初次加载耗时多：需要在加载页面的时候将 JS、CSS 统一加载，部分页面按需加载</li>\n<li>前进后退路由管理：由于单页应用在一个页面中显示所有内容，所以不能使用浏览器的前进后退功能，所有的页面切换都需要自己建立堆栈管理</li>\n<li>SEO 难度较大：因为所有内容都在一个页面中动态替换显示，所以在 SEO 上有着天然的劣势</li>\n</ul>\n<h3 id=\"2-v-show-和-v-if-有什么区别\"><a class=\"anchor\" href=\"#2-v-show-和-v-if-有什么区别\">#</a> 2. v-show 和 v-if 有什么区别？</h3>\n<hr />\n<p><strong>v-if</strong> 是真正的条件渲染，因为它会在切换过程中将条件块内的事件监听器和子组件适当的销毁和重建；同时也是 ** 惰性的：** 初始条件为假，则什么也不做，直到条件为真，才进行渲染</p>\n<p><strong>v-show</strong> 无论条件为何，元素总是会被渲染，只是基于 CSS 的 display 属性进行显示切换</p>\n<p>所以，v-if 适合用于不需要频繁切换条件的场景；v-show 则反之</p>\n<h3 id=\"3-class-与-style-如何动态绑定\"><a class=\"anchor\" href=\"#3-class-与-style-如何动态绑定\">#</a> 3. Class 与 Style 如何动态绑定？</h3>\n<hr />\n<p>Class 可以通过对象语法和数组语法进行动态绑定：</p>\n<ul>\n<li>对象语法：</li>\n</ul>\n<pre><code>&lt;div :class=&quot;&#123; active: isActive, 'text-danger': hasError &#125;&quot;&gt;&lt;/div&gt;\n\ndata: &#123;\n  isActive: true,\n  hasError: false\n&#125;\n</code></pre>\n<p>带连字符的要加引号，通过 true/false 控制类名</p>\n<ul>\n<li>数组语法：</li>\n</ul>\n<pre><code>&lt;div :class=&quot;[isActive ? activeClass : '', errorClass]&quot;&gt;&lt;/div&gt;\n\ndata: &#123;\n  activeClass: 'active',\n  errorClass: 'text-danger'\n&#125;\n</code></pre>\n<p>通过属性名来渲染为类名的属性值</p>\n<p>Style 也可以通过对象语法和数组语法进行动态绑定：</p>\n<ul>\n<li>对象语法：</li>\n</ul>\n<pre><code>&lt;div :style=&quot;&#123; color: activeColor, fontSize: fontSize + 'px' &#125;&quot;&gt;&lt;/div&gt;\n\ndata: &#123;\n  activeColor: 'red',\n  fontSize: 30\n&#125;\n</code></pre>\n<p>可以在里面拼接字符串，也可以进行一些简单的运算</p>\n<ul>\n<li>数组语法：</li>\n</ul>\n<pre><code>&lt;div :style=&quot;[styleColor, styleSize]&quot;&gt;&lt;/div&gt;\n\ndata: &#123;\n  styleColor: &#123;\n     color: 'red'\n   &#125;,\n  styleSize:&#123;\n     fontSize:'23px'\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"4-vue-的单向数据流\"><a class=\"anchor\" href=\"#4-vue-的单向数据流\">#</a> 4. Vue 的单向数据流</h3>\n<hr />\n<p>所有的 porp 都会使其父子 prop 之间形成一个<strong>单向下行绑定</strong>：父级 prop 的更新会影响子组件的值，但是反之不行。这样可以防止子组件意外改变父组件的值，从而导致你的引应用数据流向难以理解</p>\n<p>还有，每次父组件发生更新，子组件中所有的 prop 都会刷新为最新的值。</p>\n<p>无法在子组件直接修改 prop，vue 会报错，想在子组件中修改 prop 只能通过 $emit 派发一个自定义事件，父组件接收到后，由父组件修改</p>\n<p>有两种常见的试图改变一个 prop 的情形 :</p>\n<ul>\n<li>** 这个 prop 传递一个初始值，并且这个子组件接下来下午将其作为一个本地的 prop 数据来使用。** 就把 prop 转存到 data 中</li>\n</ul>\n<pre><code>props: ['initialCounter'],\ndata: function () &#123;\n  return &#123;\n    counter: this.initialCounter\n  &#125;\n&#125;\n</code></pre>\n<ul>\n<li><strong>这个 prop 以一种原始的值传入且需要进行转换</strong>。使用这个 prop 来定义一个计算属性</li>\n</ul>\n<pre><code>props: ['size'],\ncomputed: &#123;\n  normalizedSize: function () &#123;\n    return this.size.trim().toLowerCase()\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"5-computed-和-watch-的区别和应用场景\"><a class=\"anchor\" href=\"#5-computed-和-watch-的区别和应用场景\">#</a> 5. computed 和 watch 的区别和应用场景？</h3>\n<hr />\n<p>**computed：** 是计算属性，依赖其他属性值，并且 computed 的值有缓存，只要依赖项发生改变，computed 就会重新计算</p>\n<p>**watch：** 当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。</p>\n<p><strong>运用场景：</strong></p>\n<ul>\n<li>当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；</li>\n<li>当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。</li>\n</ul>\n<h3 id=\"6-直接给一个数组项赋值vue-能检测到变化吗\"><a class=\"anchor\" href=\"#6-直接给一个数组项赋值vue-能检测到变化吗\">#</a> 6. 直接给一个数组项赋值，Vue 能检测到变化吗？</h3>\n<hr />\n<p>由于 JavaScript 的限制，Vue 不能检测到以下数组的变动：</p>\n<ul>\n<li>当你利用索引直接设置一个数组项时，例如： <code>vm.items[indexOfItem] = newValue</code></li>\n<li>当你修改数组的长度时，例如： <code>vm.items.length = newLength</code></li>\n</ul>\n<p>为了解决第一个问题，Vue 提供了以下操作方法：</p>\n<pre><code>// Vue.set\nVue.set(vm.items, indexOfItem, newValue)\n// vm.$set，Vue.set的一个别名\nvm.$set(vm.items, indexOfItem, newValue)\n// Array.prototype.splice\nvm.items.splice(indexOfItem, 1, newValue)\n复制代码\n</code></pre>\n<p>为了解决第二个问题，Vue 提供了以下操作方法：</p>\n<pre><code>// Array.prototype.splice\nvm.items.splice(newLength)\n</code></pre>\n<h3 id=\"7-对-vue-生命周期的理解\"><a class=\"anchor\" href=\"#7-对-vue-生命周期的理解\">#</a> 7. 对 Vue 生命周期的理解？</h3>\n<hr />\n<p><strong>（1）生命周期是什么？</strong></p>\n<p>Vue 实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模版、挂载 Dom -&gt; 渲染、更新 -&gt; 渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。</p>\n<p><strong>（2）各个生命周期的作用</strong></p>\n<table>\n<thead>\n<tr>\n<th>生命周期</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>beforeCreate</td>\n<td>组件实例被创建之初，组件的属性生效之前</td>\n</tr>\n<tr>\n<td>created</td>\n<td>组件实例已经完全创建，属性也绑定，但真实 dom 还没有生成，$el 还不可用</td>\n</tr>\n<tr>\n<td>beforeMount</td>\n<td>在挂载开始之前被调用：相关的 render 函数首次被调用</td>\n</tr>\n<tr>\n<td>mounted</td>\n<td>el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子</td>\n</tr>\n<tr>\n<td>beforeUpdate</td>\n<td>组件数据更新之前调用，发生在虚拟 DOM 打补丁之前</td>\n</tr>\n<tr>\n<td>update</td>\n<td>组件数据更新之后</td>\n</tr>\n<tr>\n<td>activited</td>\n<td>keep-alive 专属，组件被激活时调用</td>\n</tr>\n<tr>\n<td>deactivated</td>\n<td>keep-alive 专属，组件被销毁时调用</td>\n</tr>\n<tr>\n<td>beforeDestory</td>\n<td>组件销毁前调用</td>\n</tr>\n<tr>\n<td>destoryed</td>\n<td>组件销毁后调用</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"8-vue-的父组件和子组件生命周期钩子函数执行顺序\"><a class=\"anchor\" href=\"#8-vue-的父组件和子组件生命周期钩子函数执行顺序\">#</a> 8. Vue 的父组件和子组件生命周期钩子函数执行顺序？</h3>\n<hr />\n<p>Vue 的父组件和子组件生命周期钩子函数执行顺序可以归类为以下 4 部分：</p>\n<ul>\n<li>\n<p>加载渲染过程</p>\n<p>父 beforeCreate -&gt; 父 created -&gt; 父 beforeMount -&gt; 子 beforeCreate -&gt; 子 created -&gt; 子 beforeMount -&gt; 子 mounted -&gt; 父 mounted</p>\n</li>\n<li>\n<p>子组件更新过程</p>\n<p>父 beforeUpdate -&gt; 子 beforeUpdate -&gt; 子 updated -&gt; 父 updated</p>\n</li>\n<li>\n<p>父组件更新过程</p>\n<p>父 beforeUpdate -&gt; 父 updated</p>\n</li>\n<li>\n<p>销毁过程</p>\n<p>父 beforeDestroy -&gt; 子 beforeDestroy -&gt; 子 destroyed -&gt; 父 destroyed</p>\n</li>\n</ul>\n<h3 id=\"9-在哪个生命周期内调用异步请求\"><a class=\"anchor\" href=\"#9-在哪个生命周期内调用异步请求\">#</a> 9. 在哪个生命周期内调用异步请求？</h3>\n<hr />\n<p>可以在钩子函数 created、beforeMount、mounted 中进行调用，因为在这三个钩子函数中，data 已经创建，可以将服务端端返回的数据进行赋值。但是推荐在 created 钩子函数中调用异步请求，因为：</p>\n<ul>\n<li>能更快获取到服务端数据，减少页面 loading 时间；</li>\n<li>ssr 不支持 beforeMount 、mounted 钩子函数，所以放在 created 中有助于一致性；</li>\n</ul>\n<h3 id=\"10-在什么阶段才能访问操作-dom\"><a class=\"anchor\" href=\"#10-在什么阶段才能访问操作-dom\">#</a> 10. 在什么阶段才能访问操作 DOM？</h3>\n<p>在钩子函数 mounted 被调用前，Vue 已经将编译好的模板挂载到页面上，所以在 mounted 中可以访问操作 DOM。</p>\n",
            "tags": [
                "前端",
                "Vue",
                "前端",
                "Vue"
            ]
        },
        {
            "id": "http://example.com/2021/11/26/hello-world/",
            "url": "http://example.com/2021/11/26/hello-world/",
            "title": "Hello World",
            "date_published": "2021-11-26T14:28:24.686Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/08/13/theme-shoka-doc/special/",
            "url": "http://example.com/2020/08/13/theme-shoka-doc/special/",
            "title": "Step.4 主题特殊功能",
            "date_published": "2020-08-13T13:45:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\"><strong>🦄特殊功能</strong></a></p>\n</div>\n<div class=\"note info\">\n<p>以下介绍可以使用的 markdown 或者标签代码。<br />\n功能大部分基于 <code>hexo-renderer-multi-markdown-it</code>  渲染器，尤其是代码块的显示，与默认渲染器不兼容。</p>\n</div>\n<h1 id=\"links-链接块\"><a class=\"anchor\" href=\"#links-链接块\">#</a>  <code>links</code>  链接块</h1>\n<p>本功能参考 NexT，基于 Hexo Tag 功能，用来建立友链或其他网址链接功能。</p>\n<p>文章中的使用格式：</p>\n<ol>\n<li>使用 <code>links</code>  标签块，包围 <code>yml</code>  语法书写的内容，字段包括</li>\n</ol>\n<table>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>站点名称</td>\n<td>必填</td>\n</tr>\n<tr>\n<td><code>owner</code></td>\n<td>管理员名字</td>\n<td>可选，默认为 <code>site</code>  的值</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>站点链接</td>\n<td>必填</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>站点描述</td>\n<td>可选，默认为 <code>url</code>  的值</td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>站点图片</td>\n<td>可选，默认为 <code>images/404.png</code></td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>方块颜色</td>\n<td>可选，默认为 <code>#666</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- site: #站点名称</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  owner: #管理员名字</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  url: #站点网址</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  desc: #简短描述</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  image: #一张图片</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  color: #颜色代码</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  desc: 琉璃的医学 &amp; 编程笔记</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  image: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;amehime&#x2F;shoka@latest&#x2F;images&#x2F;avatar.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  color: &quot;#e9546b&quot;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  image: images&#x2F;avatar.jpg</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  desc: 琉璃的医学 &amp; 编程笔记</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  color: &quot;#9d5b8b&quot;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr></table></figure><p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n<ol start=\"2\">\n<li>以上标签块里的内容，还可以保存到一个 <code>yml</code>  文件中，然后使用 <code>linksfile</code>  标签。<br />\n其中， <code>path</code>  位于 <code>&lt;root&gt;/source</code>  目录下。</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% linksfile [path] %&#125;</pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% linksfile friends&#x2F;_data.yml %&#125;</pre></td></tr></table></figure><h1 id=\"code代码块\"><a class=\"anchor\" href=\"#code代码块\">#</a>  <code>code</code>  代码块</h1>\n<p>使用 <code>markdown-it-prism</code>  进行代码高亮，支持显示行号、行高亮 <code>mark</code> 、命令行提示符 <code>command</code> 、代码块标题。</p>\n<p>基本格式： <code>[language] [title] [url] [link text] [mark] [command]</code></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>language</p>\n</td>\n<td>\n<ul>\n<li>支持的语言<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmlzbWpzLmNvbS8jc3VwcG9ydGVkLWxhbmd1YWdlcw==\">戳此</span></li>\n<li>如果不需要代码高亮，但希望显示代码块样式，则设为 <code>raw</code></li>\n<li>留空或设为 <code>info</code> ，将不显示代码高亮和代码块样式</li>\n</ul>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n<tr>\n<td>title</td>\n<td>代码块的标题文字</td>\n<td>null</td>\n</tr>\n<tr>\n<td>url</td>\n<td>代码块标题右侧显示的链接</td>\n<td>null</td>\n</tr>\n<tr>\n<td>link text</td>\n<td>上述链接显示的标题</td>\n<td>link</td>\n</tr>\n<tr>\n<td>\n<p>mark</p>\n</td>\n<td>\n<p>行高亮显示，格式为 <code>mark:行号,行号开始-行号结束,其他行号</code> 。<br />\n例如 <code>mark:1,4-7,10</code> ，将高亮显示第 1、4、5、6、7、10 行</p>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>command</p>\n</td>\n<td>\n<p>命令行提示符，格式为 <code>command:(&quot;提示内容&quot;:行号,行号||&quot;提示内容&quot;:行号开始-行号结束)</code> <br />\n 例如 <code>command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)</code></p>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#96;&#96;&#96;java 行高亮 https:&#x2F;&#x2F;shoka.lostyu.me 参考链接 mark:1,6-7</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import java.util.Scanner;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Scanner in &#x3D; new Scanner (System.in);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#x2F;&#x2F; 输入 Scan 之后，按下键盘 Alt + “&#x2F;” 键，Eclipse 下自动补全。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println (in.nextLine ());</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>System.out.println (&quot;Hello&quot; + &quot;world.&quot;);</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>&#96;&#96;&#96;bash 命令行提示符 command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pwd</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#x2F;usr&#x2F;home&#x2F;chris&#x2F;bin</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ls -la</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>total 2</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>drwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>drwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>git add -A</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>git commit -m &quot;update&quot;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>git push</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>行高亮</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">参考链接</span></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令行提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">pwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>/usr/home/chris/bin</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">ls</span> -la</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>total <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr-xr-x   <span class=\"token number\">2</span> chris  chris     <span class=\"token number\">11</span> Jan <span class=\"token number\">10</span> <span class=\"token number\">16</span>:48 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr--r-x  <span class=\"token number\">45</span> chris  chris     <span class=\"token number\">92</span> Feb <span class=\"token number\">14</span> <span class=\"token number\">11</span>:10 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">444</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2013</span> backup</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">642</span> Jan <span class=\"token number\">17</span> <span class=\"token number\">14</span>:42 deploy</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> -A</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"update\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">git</span> push</pre></td></tr></table></figure><h1 id=\"quiz-练习题与答案\"><a class=\"anchor\" href=\"#quiz-练习题与答案\">#</a>  <code>quiz</code>  练习题与答案</h1>\n<p>这个功能是用来显示练习题的。<br />\n需要在 Front Matter 中添加 <code>quiz: true</code> ，以正确显示题型标签。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>几个例子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 练习题与答案</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>quiz: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>1. 编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 &#123;.quiz .true&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>2. 有基类 &#96;SHAPE&#96;，派生类 &#96;CIRCLE&#96;，声明如下变量：  &#123;.quiz .multi&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#96;&#96;&#96;cpp</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    SHAPE shape1,*p1;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    CIRCLE circle1,*q1;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    &#96;&#96;&#96;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    下列哪些项是 “派生类对象替换基类对象”。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - &#96;p1&#x3D;&amp;circle1;&#96; &#123;.correct&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - &#96;q1&#x3D;&amp;shape1;&#96;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    - &#96;shape1&#x3D;circle1;&#96; &#123;.correct&#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    - &#96;circle1&#x3D;shape1;&#96;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#123;.options&#125;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    &gt; - :heavy_check_mark: 令基类对象的指针指向派生类对象</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &gt; - :x: 派生类指针指向基类的引用</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    &gt; - :heavy_check_mark: 派生类对象给基类对象赋值</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    &gt; - :x: 基类对象给派生类对象赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    &gt; &#123;.options&#125;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>3. 下列叙述正确的是 []&#123;.gap&#125; 。 &#123;.quiz&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    - 虚函数只能定义成无参函数</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    - 虚函数不能有返回值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    - 能定义虚构造函数</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - A、B、C 都不对 &#123;.correct&#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>&#123;.options&#125;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>10. 如果定义 &#96;int e&#x3D;8; double f&#x3D;6.4, g&#x3D;8.9;&#96;，则表达式 &#96;f+int (e&#x2F;3*int (f+g)&#x2F;2)%4&#96; 的值为 [9.4]&#123;.gap&#125;。 &#123;.quiz .fill&#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    &gt; 注意运算顺序和数据类型</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    &gt; [8.4]&#123;.mistake&#125;</pre></td></tr></table></figure><p>点击选项可以显示答案，以及答案解析。</p>\n<ol>\n<li class=\"quiz\">\n<p>下列叙述正确的是 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li class=\"correct\">A、B、C 都不对</li>\n</ul>\n</li>\n<li class=\"quiz multi\">\n<p>有基类 <code>SHAPE</code> ，派生类 <code>CIRCLE</code> ，声明如下变量： </p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SHAPE shape1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CIRCLE circle1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下列哪些项是 “派生类对象替换基类对象”。</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>p1=&amp;circle1;</code> </li>\n<li><code>q1=&amp;shape1;</code></li>\n<li class=\"correct\"><code>shape1=circle1;</code> </li>\n<li><code>circle1=shape1;</code></li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>✔️ 令基类对象的指针指向派生类对象</li>\n<li>❌ 派生类指针指向基类的引用</li>\n<li>✔️ 派生类对象给基类对象赋值</li>\n<li>❌ 基类对象给派生类对象赋值</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。</p>\n</li>\n<li class=\"quiz fill\">\n<p>如果定义 <code>int e=8; double f=6.4, g=8.9;</code> ，则表达式  <code>f+int(e/3*int(f+g)/2)%4</code>  的值为 <span class=\"gap\">9.4</span>。</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br />\n<span class=\"mistake\"> 8.4</span></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"使用说明\"><a class=\"anchor\" href=\"#使用说明\">#</a> 使用说明</h2>\n<p>本功能基于 <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code></p>\n<table>\n<thead>\n<tr>\n<th>标签</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&#123;.quiz&#125;</code></td>\n<td>选择题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .multi&#125;</code></td>\n<td>多选题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .true&#125;</code></td>\n<td>正确的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .false&#125;</code></td>\n<td>错误的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .fill&#125;</code></td>\n<td>填空题</td>\n</tr>\n<tr>\n<td><code>[]&#123;.gap&#125;</code></td>\n<td>空白下划线</td>\n</tr>\n<tr>\n<td><code>[答案内容]&#123;.gap&#125;</code></td>\n<td>答案内容带下划线</td>\n</tr>\n<tr>\n<td><code>&#123;.options&#125;</code></td>\n<td>ABCDE 选项</td>\n</tr>\n<tr>\n<td><code>&#123;.correct&#125;</code></td>\n<td>选择题的正确选项</td>\n</tr>\n<tr>\n<td><code>&gt;</code></td>\n<td>答案解析</td>\n</tr>\n<tr>\n<td><code>[8.4]&#123;.mistake&#125;</code></td>\n<td>错题备注</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"emoji-绘文字\"><a class=\"anchor\" href=\"#emoji-绘文字\">#</a>  <code>emoji</code>  绘文字</h1>\n<p>本功能基于 <code>markdown-it-emoji</code> ，所有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmtkb3duLWl0L21hcmtkb3duLWl0LWVtb2ppL2Jsb2IvbWFzdGVyL2xpYi9kYXRhL2Z1bGwuanNvbg==\">标签参考戳此</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:kissing_heart:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>:ring:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:notes:</pre></td></tr></table></figure><p>😘 💍 🎶</p>\n<h1 id=\"effects-文字特效\"><a class=\"anchor\" href=\"#effects-文字特效\">#</a>  <code>effects</code>  文字特效</h1>\n<p>本功能基于 <code>markdown-it-ins</code> 、  <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code></p>\n<blockquote>\n<p>本主题风格颜色通用样式：default、primary、success、info、warning、danger</p>\n</blockquote>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 波浪线 ++&#123;.wavy&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>++ 着重点 ++&#123;.dot&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>++ 紫色下划线 ++&#123;.primary&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>++ 绿色波浪线 ++&#123;.wavy .success&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>++ 黄色着重点 ++&#123;.dot .warning&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>~~ 删除线～～</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>~~ 红色删除线～～&#123;.danger&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#x3D;&#x3D; 荧光高亮 &#x3D;&#x3D;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>[赤橙黄绿青蓝紫]&#123;.rainbow&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>[红色]&#123;.red&#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>[粉色]&#123;.pink&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>[橙色]&#123;.orange&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>[黄色]&#123;.yellow&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>[绿色]&#123;.green&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>[靛青]&#123;.aqua&#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>[蓝色]&#123;.blue&#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>[紫色]&#123;.purple&#125;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>[灰色]&#123;.grey&#125;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>快捷键 [Ctrl]&#123;.kbd&#125; + [C]&#123;.kbd .red&#125;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>H~2~0</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>29^th^</pre></td></tr></table></figure><div class=\"note warning\">\n<p>这段代码因为自动被 pangu.js 处理了一下，加了几个空格，导致直接复制代码不能正常显示。<br />\n正确的代码是 <code>++下划线++</code>   <code>~~删除线~~</code>   <code>==荧光高亮==</code> ，不能有空格哦。</p>\n</div>\n<p><ins>下划线</ins><br />\n<ins class=\"wavy\">波浪线</ins><br />\n<ins class=\"dot\">着重点</ins><br />\n<ins class=\"primary\">紫色下划线</ins><br />\n<ins class=\"wavy success\">绿色波浪线</ins><br />\n<ins class=\"dot warning\">黄色着重点</ins><br />\n<s>删除线</s><br />\n<s class=\"danger\">红色删除线</s><br />\n<mark>荧光高亮</mark><br />\n<span class=\"rainbow\">赤橙黄绿青蓝紫</span><br />\n<span class=\"red\">红色</span><br />\n<span class=\"pink\">粉色</span><br />\n<span class=\"orange\">橙色</span><br />\n<span class=\"yellow\">黄色</span><br />\n<span class=\"green\">绿色</span><br />\n<span class=\"aqua\">靛青</span><br />\n<span class=\"blue\">蓝色</span><br />\n<span class=\"purple\">紫色</span><br />\n<span class=\"grey\">灰色</span><br />\n快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">C</span><br />\nH<sub>2</sub>0<br />\n29<sup>th</sup></p>\n<h1 id=\"spoiler隐藏文字\"><a class=\"anchor\" href=\"#spoiler隐藏文字\">#</a>  <code>spoiler</code>  隐藏文字</h1>\n<p>本功能基于 <code>markdown-it-spoiler</code>  和 <code>markdown-it-attrs</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>!! 模糊模糊模糊模糊模糊模糊！！&#123;.bulr&#125; ： 选中文字显示内容</pre></td></tr></table></figure><p><span class=\"spoiler\" title=\"你知道得太多了\">黑幕黑幕黑幕黑幕黑幕黑幕</span> ： 鼠标滑过显示内容<br />\n<span class=\"spoiler bulr\" title=\"你知道得太多了\">模糊模糊模糊模糊模糊模糊</span> ： 选中文字显示内容</p>\n<h1 id=\"label-标签块\"><a class=\"anchor\" href=\"#label-标签块\">#</a>  <code>label</code>  标签块</h1>\n<p>本功能基于 <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code> <br />\n 有以下颜色可选</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[default]&#123;.label&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>[primary]&#123;.label .primary&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[info]&#123;.label .info&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[:heavy_check_mark:success]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>[warning]&#123;.label .warning&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[:broken_heart:danger]&#123;.label .danger&#125;</pre></td></tr></table></figure><p><span class=\"label\">default</span><br />\n<span class=\"label primary\">primary</span><br />\n<span class=\"label info\">info</span><br />\n<span class=\"label success\">✔️success</span><br />\n<span class=\"label warning\">warning</span><br />\n<span class=\"label danger\">💔danger</span></p>\n<h1 id=\"note-提醒块\"><a class=\"anchor\" href=\"#note-提醒块\">#</a>  <code>note</code>  提醒块</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>:::[风格颜色]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>:::</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:::default</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>默认默认</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>:::primary</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>基本基本</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>提示提示</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>:::success</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>成功成功</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>:::warning</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>警告警告</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>:::danger no-icon</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>:::</pre></td></tr></table></figure><div class=\"note default\">\n<p>默认默认</p>\n</div>\n<div class=\"note primary\">\n<p>基本基本</p>\n</div>\n<div class=\"note info\">\n<p>提示提示</p>\n</div>\n<div class=\"note success\">\n<p>成功成功</p>\n</div>\n<div class=\"note warning\">\n<p>警告警告</p>\n</div>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<div class=\"note danger no-icon\">\n<p>没有图标</p>\n</div>\n<h1 id=\"tab标签卡\"><a class=\"anchor\" href=\"#tab标签卡\">#</a>  <code>tab</code>  标签卡</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>;;;[同一ID] [标签名称]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>;;;</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>;;;id1 卡片 1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>** 加粗 **</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[success]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  desc: 琉璃的医学 &amp; 编程笔记</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  image: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;amehime&#x2F;shoka@latest&#x2F;images&#x2F;avatar.jpg</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  color: &quot;#e9546b&quot;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>;;;id1 卡片 2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>;;;id2 ②号标签卡片 1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>;;;id2 ②号标签卡片 2</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>;;;</pre></td></tr></table></figure><div class=\"tab\" data-id=\"id1\" data-title=\"卡片1\">\n<p>这里是卡片 1 的内容<br />\n<strong>加粗</strong><br />\n<span class=\"label success\"> success</span></p>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"卡片2\">\n<p>这里是卡片 2 的内容</p>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n<h1 id=\"collapse-折叠块\"><a class=\"anchor\" href=\"#collapse-折叠块\">#</a>  <code>collapse</code>  折叠块</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>+++[风格颜色] [标题文字]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>+++</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+++ 默认默认 这里是一段文字</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+++primary 紫色</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>参考信息</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+++info  蓝色</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>;;;id3 卡片 1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>;;;id3 卡片 2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>+++success 绿色</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  color: &quot;#e9546b&quot;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>+++warning 黄色</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>!! 警告警告警告警告警告！！&#123;.bulr&#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>[label]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>+++danger 红色</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>[danger]&#123;.label .danger&#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>+++</pre></td></tr></table></figure><details><summary>默认默认 这里是一段文字</summary><div>\n<p><ins>下划线</ins></p>\n</div></details>\n<details class=\"primary\"><summary>紫色</summary><div>\n<div class=\"note info\">\n<p>参考信息</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div></details>\n<details class=\"info\"><summary>蓝色</summary><div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片1\">\n<p>这里是卡片 1 的内容<br />\n<ins class=\"wavy\">波浪线</ins></p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n</div></details>\n<details class=\"success\"><summary>绿色</summary><div>\n<p><div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div></p>\n</div></details>\n<details class=\"warning\"><summary>黄色</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">警告警告警告警告警告</span><br />\n<span class=\"label success\"> label</span></p>\n</div></details>\n<details class=\"danger\"><summary>红色</summary><div>\n<p><span class=\"label danger\">danger</span></p>\n</div></details>\n<h1 id=\"tasklist-待办事项\"><a class=\"anchor\" href=\"#tasklist-待办事项\">#</a>  <code>taskList</code>  待办事项</h1>\n<p>本功能基于 <code>markdown-it-task-checkbox</code> 。<br />\n可以利用 <code>markdown-it-attrs</code>  添加风格颜色，只可以给 <code>ul</code>  标签添加，需要新建两行。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>- [ ] 这是一个小叉叉</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- [x] 这是一个红色勾勾</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#123;.danger&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- [ ] 未完成</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- [x] 完成</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#123;.primary&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- [ ] 未完成</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- [x] 默认颜色</pre></td></tr></table></figure><ul class=\"task-list danger\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 这是一个小叉叉</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 这是一个红色勾勾</label></li>\n</ul>\n<ul class=\"task-list primary\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_3\"> 完成</label></li>\n</ul>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_5\"> 默认颜色</label></li>\n</ul>\n<h1 id=\"furigana文字注音\"><a class=\"anchor\" href=\"#furigana文字注音\">#</a>  <code>furigana</code>  文字注音</h1>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br />\n为了兼容性，采用 <code>markdown-it-ruby</code>  的基本格式： <code>&#123;文字^注音&#125;</code> ，并且为了兼容表格，将分隔符由 <code>|</code>  换成了 <code>^</code> 。<br />\n注音分隔基于 <code>furigana-markdown-it</code> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZnVyaWdhbmEtbWFya2Rvd24taXQjcXVpY2stdXNhZ2U=\"> 显示说明看这里</span></p>\n<table>\n<tbody>\n<tr>\n<td><code>&#123;取り返す^とりかえす&#125;</code></td>\n<td><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;可愛い犬^か+わい・い・いぬ&#125;</code></td>\n<td><ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;可愛い犬^か・わい・いいぬ&#125;</code></td>\n<td><ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;アクセラレータ^accelerator&#125;</code></td>\n<td><ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;accelerator^アクセラレータ&#125;</code></td>\n<td><ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;食べる^たべる&#125;</code></td>\n<td><ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;食べる^=たべる&#125;</code></td>\n<td><ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;あいうえお^*&#125;</code></td>\n<td><ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;あいうえお^*❤&#125;</code></td>\n<td><ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;常用账号^contact&#125;</code></td>\n<td><ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"media多媒体\"><a class=\"anchor\" href=\"#media多媒体\">#</a>  <code>media</code>  多媒体</h1>\n<p>本功能基于 Hexo Tag 功能，使用 <code>media</code>  标签，目前可选择两种类型，即 <code>audio</code>  和 <code>video</code> 。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% media audio %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>... 音频列表</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#123;% media video %&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>... 视频列表</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr></table></figure><p>标签包绕一段 <code>yml</code>  格式的内容，格式与<a href=\"../config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90\">背景音乐</a>的配置类似。</p>\n<p>亦可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% media audio %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- title: 列表 1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  list:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    - https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;playlist?id&#x3D;2943811283</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    - https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;playlist?id&#x3D;2297706586</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- title: 列表 2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  list:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    - https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;playlist?id&#x3D;2031842656</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#123;% media video %&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>- name: &quot;测试 1&quot;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  url: https:&#x2F;&#x2F;cdn.kastatic.org&#x2F;ka-youtube-converted&#x2F;O_nY1TM2RZM.mp4&#x2F;O_nY1TM2RZM.mp4#t&#x3D;0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>- name: &quot;测试 2&quot;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  url: https:&#x2F;&#x2F;cdn.kastatic.org&#x2F;ka-youtube-converted&#x2F;O_nY1TM2RZM.mp4&#x2F;O_nY1TM2RZM.mp4#t&#x3D;0</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr></table></figure><p><div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表1\",\"list\":[\"https://music.163.com/#/playlist?id=2943811283\",\"https://music.163.com/#/playlist?id=2297706586\"]},{\"title\":\"列表2\",\"list\":[\"https://music.163.com/#/playlist?id=2031842656\"]}]'></div></div></p>\n<p><div class=\"media-container\"><div class=\"player\" data-type=\"video\" data-src='[{\"name\":\"测试1\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"},{\"name\":\"测试2\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"}]'></div></div></p>\n<h1 id=\"math数学公式\"><a class=\"anchor\" href=\"#math数学公式\">#</a>  <code>math</code>  数学公式</h1>\n<p>本功能基于 <code>markdown-it-katex</code> <br />\n 在 Front Matter 中添加 <code>math: true</code>  以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcv\"> KaTex</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 数学公式显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>math: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>行内公式：$\\sqrt &#123;3x-1&#125;+(1+x)^2$</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>独立块显示：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>$$\\begin &#123;array&#125;&#123;c&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\\nabla \\times \\vec &#123;\\mathbf &#123;B&#125;&#125; -\\, \\frac1c\\, \\frac &#123;\\partial\\vec &#123;\\mathbf &#123;E&#125;&#125;&#125;&#123;\\partial t&#125; &amp;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#x3D; \\frac &#123;4\\pi&#125;&#123;c&#125;\\vec &#123;\\mathbf &#123;j&#125;&#125;    \\nabla \\cdot \\vec &#123;\\mathbf &#123;E&#125;&#125; &amp; &#x3D; 4 \\pi \\rho \\\\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\\nabla \\times \\vec &#123;\\mathbf &#123;E&#125;&#125;\\, +\\, \\frac1c\\, \\frac &#123;\\partial\\vec &#123;\\mathbf &#123;B&#125;&#125;&#125;&#123;\\partial t&#125; &amp; &#x3D; \\vec &#123;\\mathbf &#123;0&#125;&#125; \\\\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\\nabla \\cdot \\vec &#123;\\mathbf &#123;B&#125;&#125; &amp; &#x3D; 0</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\\end &#123;array&#125;$$</pre></td></tr></table></figure><p>行内公式：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mrow><mn>3</mn><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msqrt><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sqrt{3x-1}+(1+x)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.17444499999999996em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8655550000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">3</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.825555em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17444499999999996em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>独立块显示：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>×</mo><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover><mo>−</mo><mtext> </mtext><mfrac><mn>1</mn><mi>c</mi></mfrac><mtext> </mtext><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mfrac><mrow><mn>4</mn><mi>π</mi></mrow><mi>c</mi></mfrac><mover accent=\"true\"><mi mathvariant=\"bold\">j</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mn>4</mn><mi>π</mi><mi>ρ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>×</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mi>c</mi></mfrac><mtext> </mtext><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mover accent=\"true\"><mn mathvariant=\"bold\">0</mn><mo>⃗</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{c}\n\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp;\n= \\frac{4\\pi}{c}\\vec{\\mathbf{j}}    \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\\\\n\n\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0\n\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.1938640000000005em;vertical-align:-1.846932em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.072377em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">E</span></span></span></span><span style=\"top:-2.96911em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.9145549999999996em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.072377em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">B</span></span></span></span><span style=\"top:-2.96911em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.585445em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.846932em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774399999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">j</span></span></span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9145549999999996em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92744em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">0</span></span></span></span><span style=\"top:-3.21344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span><span style=\"top:-1.585445em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.846932em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">ρ</span></span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<h1 id=\"mermaid流程图\"><a class=\"anchor\" href=\"#mermaid流程图\">#</a>  <code>mermaid</code>  流程图</h1>\n<p>本功能基于 <code>markdown-it-mermaid</code> <br />\n 在 Front Matter 中添加 <code>mermaid: true</code>  以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMv\"> Mermaid</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 流程图显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mermaid: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#96;&#96;&#96;mermaid</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>graph LR</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    A [Square Rect] -- Link text --&gt; B ((Circle))</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    A --&gt; C (Round Rect)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    B --&gt; D &#123;Rhombus&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    C --&gt; D</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#96;&#96;&#96;mermaid</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sequenceDiagram</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    loop Daily query</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        Alice-&gt;&gt;Bob: Hello Bob, how are you?</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        alt is sick</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            Bob-&gt;&gt;Alice: Not so good :(</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        else is well</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            Bob-&gt;&gt;Alice: Feeling fresh like a daisy</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        opt Extra response</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Bob-&gt;&gt;Alice: Thanks for asking</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    end</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A<span class=\"token text string\">[Square Rect]</span> <span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span> <span class=\"token label property\">Link text</span> <span class=\"token arrow operator\">--></span></span> B<span class=\"token text string\">((Circle))</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    A <span class=\"token arrow operator\">--></span> C<span class=\"token text string\">(Round Rect)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    B <span class=\"token arrow operator\">--></span> D<span class=\"token text string\">&#123;Rhombus&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    C <span class=\"token arrow operator\">--></span> D</pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">loop</span> Daily query</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Alice<span class=\"token arrow operator\">->></span>Bob<span class=\"token operator\">:</span> Hello Bob, how are you?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">alt</span> is sick</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            Bob<span class=\"token arrow operator\">->></span>Alice<span class=\"token operator\">:</span> Not so good <span class=\"token operator\">:</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">else</span> is well</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            Bob<span class=\"token arrow operator\">->></span>Alice<span class=\"token operator\">:</span> Feeling fresh like a daisy</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">opt</span> Extra response</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            Bob<span class=\"token arrow operator\">->></span>Alice<span class=\"token operator\">:</span> Thanks for asking</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "http://example.com/2020/08/13/theme-shoka-doc/display/",
            "url": "http://example.com/2020/08/13/theme-shoka-doc/display/",
            "title": "Step.3 界面显示",
            "date_published": "2020-08-13T13:12:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\"><strong>🌈界面显示</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"首页置顶文章\"><a class=\"anchor\" href=\"#首页置顶文章\">#</a> 首页置顶文章</h1>\n<p>在文章的 Front Matter 设置 <code>sticky: true</code> ，则该文章将显示在首页最上方的 <code>置顶文章</code> 列。<br />\n多篇文章按照发布时间倒序排列，不分页。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 置顶文章</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sticky: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr></table></figure><h1 id=\"首页精选分类\"><a class=\"anchor\" href=\"#首页精选分类\">#</a> 首页精选分类</h1>\n<p>想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。</p>\n<ol>\n<li>\n<p>首先，修改站点配置：<br />\n找到 <code>category_map:</code> ，配置每个分类对应的英文映射，比如：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">category_map</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">计算机科学</span><span class=\"token punctuation\">:</span> computer<span class=\"token punctuation\">-</span>science</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">Java</span><span class=\"token punctuation\">:</span> java</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">C++</span><span class=\"token punctuation\">:</span> cpp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">二进制杂谈</span><span class=\"token punctuation\">:</span> note</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">计算机程序设计（C++）-西安交通大学</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">零基础学Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">面向对象程序设计-Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">2</span></pre></td></tr></table></figure><blockquote>\n<p>注意：hexo 会自动处理路径中的特殊字符，~`!@#$%<span></span>^&amp;*()-_+=<span></span>{}|\\;:&quot;'&lt;&gt;,.? 以及空格，这些全部会被替换成 <code>-</code> <br />\n 所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的 <code>cover.jpg</code></p>\n</blockquote>\n</li>\n<li>\n<p>在 <code>&lt;root&gt;/source/_posts</code>  文件夹相应的目录里，存放封面图<br />\n例子：如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9qYXZhL2NvdXJzZS0xL3dlZWstMS8=\">第 1 周 计算</span> 这篇文章。<br />\n所处的分类是</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>计算机科学<span class=\"token punctuation\">,</span> Java<span class=\"token punctuation\">,</span> 零基础学Java语言<span class=\"token punctuation\">-</span>浙江大学<span class=\"token punctuation\">-</span>翁恺<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>现在需要在首页显示 <code>零基础学Java语言-浙江大学-翁恺</code> 这个分类，翻转卡片后，显示这个分类下的文章们。<br />\n而该分类经过英文映射，它的路径将是 <code>/computer-science/java/course-1/</code> 。</p>\n<p>那么，请在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  的目录下放置 <code>cover.jpg</code>  文件。<br />\n只要 <code>分类路径</code> 对应的目录下<strong>存在</strong> <code>cover.jpg</code>  文件，这个分类就会在首页显示。<br />\n在进行 <code>hexo g</code>  时，本分类的封面图会自动被复制到 public 目录里相应的位置。</p>\n</li>\n<li>\n<p>事实上，为了方便文章管理，这个分类下所有文章的 md 文件，我都会放在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  这个目录下。</p>\n<p>且站点配置文件里，永久链接设置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/</pre></td></tr></table></figure><p><code>hexo g</code>  后，文章的 html 文件们将全部生成到 <code>&lt;root&gt;/public/computer-science/java/course-1/</code>  目录。<br />\n具体可以查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvc2hva2E=\">本博客的 github 仓库</span>。</p>\n</li>\n<li>\n<p>文章详情界面中的 <code>系列文章</code> ，显示的是与当前文章同一分类的其他文章，并按照文章名正序排序。</p>\n</li>\n</ol>\n<blockquote>\n<p>o (*￣▽￣*) ゞ<br />\n其实，不设置 <code>category_map</code>  也可以，只要在分类路径对应的文件夹下存在 <code>cover.jpg</code>  文件就行。<br />\n现在，这项功能与 <code>category_dir</code>  的配置也无关， <code>hexo g</code>  生成后，图片会自动被转移到 <code>category_dir</code>  的相关子目录下。</p>\n</blockquote>\n<h1 id=\"文章封面图\"><a class=\"anchor\" href=\"#文章封面图\">#</a> 文章封面图</h1>\n<ul>\n<li>\n<p>如果文章的 Front Matter 设置了 <code>cover: image path</code> ，则封面会显示这张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Images</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或者写成</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>这里 <code>cover</code>  的值可以是位于 <code>source</code>  目录里的图片文件，此处是 <code>&lt;root&gt;/source/assets/wallpaper-2572384.jpg</code>  文件，也可以是一个某网址。</p>\n</li>\n<li>\n<p>如果文章是一个 <code>gallery post</code> ，即 Front Matter 设置了 <code>photos</code> ，则会封面会显示设置的第一张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Gallery Post</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">photos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2311325.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>878514.jpg</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>此时默认会显示第一个图片，即位于 <code>&lt;root&gt;/source/assets/</code>  目录里的 <code>wallpaper-2572384.jpg</code> 。</p>\n</li>\n<li>\n<p>如果站点配置中设置了 <code>post_asset_folder: true</code> ，那么上述本地图片路径应为 <code>&lt;root&gt;/source/_posts/文章同名的文件夹/assets/wallpaper-2572384.jpg</code> ，当然此时 <code>assets</code>  目录可以省掉。</p>\n</li>\n<li>\n<p>如果以上设置均不存在，将显示一张随机图片，<a href=\"../config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库配置戳此</a>。</p>\n</li>\n</ul>\n<h1 id=\"图片展示与相册\"><a class=\"anchor\" href=\"#图片展示与相册\">#</a> 图片展示与相册</h1>\n<p>在文章的 Front Matter 设置 <code>fancybox: false</code> ，可以关闭文章页的图片展示功能。<br />\n使用<span class=\"exturl\" data-url=\"aHR0cDovL21pcm9tYW5uaW5vLmdpdGh1Yi5pby9KdXN0aWZpZWQtR2FsbGVyeS8=\"> Justified-Gallery</span> 对 Gallery Post 内图案进行排列。</p>\n<p>下面介绍一些小技巧：</p>\n<ol>\n<li>让图案下方显示 <code>title</code>  的 markdown 代码</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![这里是 alt](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;这里是 title&quot;)</pre></td></tr></table></figure><p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"这里是alt\" title=\"这里是title\" /></p>\n<ol start=\"2\">\n<li>设置图片的大小</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小 - 固定宽度和高度&quot;)&#123;height&#x3D;&quot;100px&quot; width&#x3D;&quot;400px&quot;&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小 - 固定宽度&quot;)&#123;width&#x3D;&quot;400px&quot;&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小 - 固定高度&quot;)&#123;height&#x3D;&quot;100px&quot;&#125;</pre></td></tr></table></figure><p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"\" title=\"定义图片大小-固定宽度和高度\" height=\"100px\" width=\"400px\" /></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"\" title=\"定义图片大小-固定宽度\" width=\"400px\" /></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"\" title=\"定义图片大小-固定高度\" height=\"100px\" /></p>\n<ol start=\"3\">\n<li>除了在 Front Matter 里配置 <code>photos</code>  可以显示相册图案列表外，还可以这样写</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>## 图案列表 No.1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclfdu6exj20zk0m87hw.jpg &quot;这里是 title&quot;)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclflwv2aj20zk0m84qp.jpg)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclg5ms2rj20zk0m8u0x.jpg)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclhnx9glj20zk0m8npd.jpg)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;.gallery&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>## 图案列表 No.2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicitht3xtj20zk0m8k5v.jpg)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclil3m4ej20zk0m8tn8.jpg)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicljgocqbj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gipetfk5zwj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#123;.gallery data-height&#x3D;&quot;120&quot;&#125;</pre></td></tr></table></figure><p><code>data-height</code>  用来设置每行的高度，默认为 <code>220</code></p>\n<h2 id=\"图案列表no1\"><a class=\"anchor\" href=\"#图案列表no1\">#</a> 图案列表 No.1</h2>\n<p class=\"gallery\"><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg\" alt=\"\" title=\"这里是title\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg\" alt=\"\" /></p>\n<h2 id=\"图案列表no2\"><a class=\"anchor\" href=\"#图案列表no2\">#</a> 图案列表 No.2</h2>\n<p class=\"gallery\" data-height=\"120\"><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg\" alt=\"\" /></p>\n<h1 id=\"自定义页面配色\"><a class=\"anchor\" href=\"#自定义页面配色\">#</a> 自定义页面配色</h1>\n<p>主题配色全部在 <code>&lt;root&gt;/themes/shoka/source/css/_colors.styl</code>  文件中，可以自行查看。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>colors.styl</code> ，在此文件中添改样式。</p>\n<blockquote>\n<p>自定义 <code>colors.styl</code>  文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>\n</blockquote>\n<p>主题支持在 <code>&lt;root&gt;/source/_data/</code>  目录建立三个自定义 <code>styl</code>  文件：</p>\n<table>\n<thead>\n<tr>\n<th>自定义文件名</th>\n<th>对应默认样式文件</th>\n<th>样式功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>colors.styl</code></td>\n<td><code>_colors.styl</code></td>\n<td>页面配色</td>\n</tr>\n<tr>\n<td><code>iconfont.styl</code></td>\n<td><code>_iconfont.styl</code></td>\n<td><a href=\"../config/#iconfont%E5%9B%BE%E6%A0%87\">图标样式</a></td>\n</tr>\n<tr>\n<td><code>custom.styl</code></td>\n<td>-</td>\n<td>任意自定义样式</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自定义主题图片\"><a class=\"anchor\" href=\"#自定义主题图片\">#</a> 自定义主题图片</h1>\n<p>如果想要修改主题的 <code>&lt;root&gt;/themes/shoka/source/images/</code>  目录内的某张图片，请在 <code>&lt;root&gt;/source/_data/</code>  目录新建目录 <code>images</code> ，并在这个文件夹中添加<ins>同名</ins>文件，部署时将自动覆盖主题内的默认图片。</p>\n<p>可以用此方法自定义头像、打赏二维码等图片，并且避免覆盖更新主题时遗失自定义文件。</p>\n<h1 id=\"自定义语言包\"><a class=\"anchor\" href=\"#自定义语言包\">#</a> 自定义语言包</h1>\n<p>本功能参考 NexT，主要可以用来定义菜单等处显示的文字，且可以方便主题无脑覆盖升级。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>languages.yml</code> 。</p>\n<p>按照以下格式添加配置项：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># language</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">zh-CN</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># items</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">copyright</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\"># the translation you perfer</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> 本文博主</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">en</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">travellings</span><span class=\"token punctuation\">:</span> Travellings</pre></td></tr></table></figure><p>可以参考主题目录下的 <code>example/source/_data</code>  文件夹。</p>\n<blockquote>\n<p>站点配置及文件的 Front Matter 中， <code>language</code>  项只支持 <code>zh-CN</code> 、 <code>zh-HK</code> 、 <code>zh-TW</code> 、 <code>ja</code> 、 <code>en</code> 。<br />\n类似写成 <code>zh_CN</code>  这样是不可以的。</p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "http://example.com/2020/08/13/theme-shoka-doc/config/",
            "url": "http://example.com/2020/08/13/theme-shoka-doc/config/",
            "title": "Step.2 基本配置",
            "date_published": "2020-08-13T12:56:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\"><strong>📌基本配置</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"站点别称\"><a class=\"anchor\" href=\"#站点别称\">#</a> 站点别称</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">alternate</span><span class=\"token punctuation\">:</span> Yume Shoka</pre></td></tr></table></figure><p>这里设置的名称代替 Logo，显示在页面顶部，以及页尾©️处</p>\n<h1 id=\"静态文件目录\"><a class=\"anchor\" href=\"#静态文件目录\">#</a> 静态文件目录</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\">#//cdn.jsdelivr.net/gh/amehime/shoka@latest/</span></pre></td></tr></table></figure><p>默认值是 <code>/</code> ，指使用本地静态文件<br />\n可以修改成 <code>//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/</code>  这种形式，以使用 jsDelivr 进行加速。<br />\nPS：jsDelivr 并不是实时更新，重新生成文件后需要耐心等待</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span> css</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span> js</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> images</pre></td></tr></table></figure><p>静态文件所处目录的实际目录名，这些一般不改。</p>\n<h1 id=\"夜间模式\"><a class=\"anchor\" href=\"#夜间模式\">#</a> 夜间模式</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">darkmode</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># true</span></pre></td></tr></table></figure><p>默认情况下，是否开启夜间模式取决于（优先级从高到低）：</p>\n<ol>\n<li>访客点击页面头部切换按钮的自行选择</li>\n<li>访客切换了浏览设备的主题色调</li>\n<li>您的 <code>darkmode</code>  配置项</li>\n</ol>\n<h1 id=\"自动定位\"><a class=\"anchor\" href=\"#自动定位\">#</a> 自动定位</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">auto_scroll</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># false</span></pre></td></tr></table></figure><p>默认情况下，再次打开页面时，会自动滚动到上次浏览的位置。<br />\n这个选项设为 <code>false</code>  时将停用此功能。</p>\n<h1 id=\"加载动画\"><a class=\"anchor\" href=\"#加载动画\">#</a> 加载动画</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 是否显示页面加载动画 loading-cat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">loader</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">start</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 当初次打开页面时，显示加载动画</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">switch</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># tab 切换到其他页面时，显示加载动画</span></pre></td></tr></table></figure><p>tab 切换后只是显示 loading 动画，实际并未重新加载页面</p>\n<h1 id=\"页面特效\"><a class=\"anchor\" href=\"#页面特效\">#</a> 页面特效</h1>\n<p>单击页面的烟花效果配置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">fireworks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否启用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">color</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 烟花颜色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(255,182,185,.9)\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(250,227,217,.9)\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(187,222,214,.9)\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(138,198,209,.9)\"</span></pre></td></tr></table></figure><h1 id=\"加载谷歌字体\"><a class=\"anchor\" href=\"#加载谷歌字体\">#</a> 加载谷歌字体</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">font</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># Font options:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\"># `external: true` will load this font family from `host` above.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># `family: Times New Roman`. Without any quotes.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\"># Global font settings used for all elements inside &lt;body>.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Mulish</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\"># Font settings for alternate title.</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">logo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Fredericka the Great</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3.5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\"># Font settings for site title.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif JP</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.5</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\"># Font settings for headlines (&lt;h1> to &lt;h6>).</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token key atrule\">headings</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif SC</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token comment\"># Font settings for posts.</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token comment\"># Font settings for &lt;code> and code blocks.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token key atrule\">codes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Inconsolata</pre></td></tr></table></figure><p>此功能基本参考 NexT。<br />\n加粗标题的字体总是使用 <code>Noto Serif</code> ，为了正确友好的显示日文中的汉字，会先后加载 <code>headings</code>  和 <code>title</code>  的字体设置。</p>\n<h1 id=\"iconfont图标\"><a class=\"anchor\" href=\"#iconfont图标\">#</a>  <code>iconfont</code>  图标</h1>\n<p>主题没有直接使用 Font Awesome，是因为用不到那么多 icon 感觉非常浪费，因此在 Iconfont 上重新建立了一个项目。<br />\n <code>font-family</code>  设为 <code>ic</code> ，所有字体样式前缀为 <code>i-</code> ，具体参见 <code>&lt;root&gt;/themes/shoka/source/css/_iconfont.styl</code> 。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># project of https://www.iconfont.cn/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># //at.alicdn.com/t/font_1832207_c8i9n1ulxlt.css => 1832207_c8i9n1ulxlt</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">iconfont</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1832207_c8i9n1ulxlt\"</span></pre></td></tr></table></figure><p>如果需要添加或修改，请留言告诉我您的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v\"> Iconfont</span> 用户名，我将把您添加到目前的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24vbWFuYWdlL2luZGV4P21hbmFnZV90eXBlPW15cHJvamVjdHMmYW1wO3Byb2plY3RJZD0xODMyMjA3\">项目</span>中。</p>\n<p>添加权限为 <code>只读</code> ，此后您可以任意全选，批量保存到购物车中，添加至您自己的项目里，并将主题配置文件中的 <code>iconfont</code>  值改为您的项目。</p>\n<p>注意，您的项目应设置 <code>FontClass/Symbol 前缀</code> 为 <code>i-</code> 。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>iconfont.styl</code> ，把新增或修改的图标样式复制到这个文件中。</p>\n<blockquote>\n<p>自定义 <code>iconfont.styl</code>  文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>\n</blockquote>\n<h1 id=\"菜单与社交按钮\"><a class=\"anchor\" href=\"#菜单与社交按钮\">#</a> 菜单与社交按钮</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> home</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> /about/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> feather</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> list<span class=\"token punctuation\">-</span>alt</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> /categories/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> th</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> tags</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># friends: /friends/ || heart</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># links: /links/ || magic</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">social</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> github <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#191717\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">#google: https://plus.google.com/yourname || google</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">twitter</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//twitter.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> twitter <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#00aff0\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">zhihu</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.zhihu.com/people/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> zhihu <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#1e88e5\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">music</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/user/home?id=yourid || cloud-music || \"#e60026\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">weibo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//weibo.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> weibo <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#ea716e\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//about.me/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> address<span class=\"token punctuation\">-</span>card <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#3b5998\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">#email: mailto:yourname@mail.com || envelope || \"#55acd5\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">#facebook: https://www.facebook.com/yourname || facebook</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">#stackoverflow: https://stackoverflow.com/yourname || stack-overflow</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">#youtube: https://youtube.com/yourname || youtube</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">#instagram: https://instagram.com/yourname || instagram</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">#skype: skype:yourname?call|chat || skype</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">#douban: https://www.douban.com/people/yourname/ || douban</span></pre></td></tr></table></figure><p>如上，使用 <code>||</code>  作为分隔符，依次为  <code>链接 || 图标 || 颜色</code> 。<br />\n注意，只需要写图标名称，如 <code>github</code> ，则会自动转换为 <code>ic i-github</code> 。<br />\n十六进制颜色码需要 <code>&quot;&quot;</code>  包绕。</p>\n<p><code>menu</code>  支持一级子目录，子目录设置中的第一项必须为 <code>default</code> ，用来定义父级按钮的样式。</p>\n<p>菜单显示文字可以在语言包中定义，<a href=\"../display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85\">具体请戳这里</a></p>\n<h1 id=\"边栏配置\"><a class=\"anchor\" href=\"#边栏配置\">#</a> 边栏配置</h1>\n<p>边栏可以选择在左侧，或右侧<br />\n修改头像文件的地址，相对于静态文件目录 <code>images</code>  中配置的路径。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">sidebar</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># Sidebar Position.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> left</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">#position: right</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># Replace the default avatar image and set the url here.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> avatar.jpg</pre></td></tr></table></figure><p>可以将自己的图片放在 <code>&lt;root&gt;/source/_data/images/</code>  目录，甚至以同名覆盖主题内默认的头像图片，<a href=\"../display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87\">具体请戳这里</a></p>\n<h1 id=\"底部widgets\"><a class=\"anchor\" href=\"#底部widgets\">#</a> 底部 widgets</h1>\n<p>目前页面底部可以显示两个小部件，即 <code>随机文章</code> 和 <code>最近评论</code> 。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">widgets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">random_posts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 显示随机文章</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">recent_comments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 显示最近评论</span></pre></td></tr></table></figure><h1 id=\"字数及阅读时间统计\"><a class=\"anchor\" href=\"#字数及阅读时间统计\">#</a> 字数及阅读时间统计</h1>\n<p>安装好 <code>hexo-symbols-count-time</code>  插件后，不需要修改站点配置文件，直接使用插件默认配置就行。</p>\n<p>需要修改主题配置文件，找到两处 <code>cout</code> ，修改为 <code>true</code> ：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 页尾全站统计</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">footer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">since</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2010</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 文章界面统计</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h1 id=\"文章评论\"><a class=\"anchor\" href=\"#文章评论\">#</a> 文章评论</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">如何获取 LeanCloud 的 appId 和 appKey</span>。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appkey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> ヽ(○´∀`)ﾉ♪ <span class=\"token comment\"># Comment box placeholder</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> mp <span class=\"token comment\"># Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Pagination size</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 文章访问量统计</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">NoRecordIP</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 不记录 IP</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">serverURLs</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">powerMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 默认打开评论框输入特效</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> 新朋友</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> 主人</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> 小伙伴</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span> 金主粑粑</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">tagColor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-orange)\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-aqua)\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-pink)\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token comment\"># - hash of master@email.com</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\"># - hash of master2@email.com</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token comment\"># - hash of friend@email.com</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\"># - hash of friend2@email.com</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\"># - hash of investor1@email.com</span></pre></td></tr></table></figure><p>tag 标签显示在评论者名字的后面，默认是 <code>tagMeta.visitor</code>  对应的值。<br />\n在 <code>tagMeta</code>  和 <code>tagColor</code>  中，除了 <code>visitor</code>  这个 key 不能修改外，其他 key 都可以换一换，但需要保证一致性。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> 游客</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> 管理员</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">waifu</span><span class=\"token punctuation\">:</span> 我老婆</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">tagColor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#855194\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#a77c59\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">waifu</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#ed6ea0\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\"># - hash of admin@email.com</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">waifu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\"># - hash of waifu@email.com</span></pre></td></tr></table></figure><p>在文章 Front Matter 中也可以配置上述参数，访问该文章页面时，将覆盖全局配置。<br />\n尤其可以用来配置一个特殊的 placeholder。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1. 提问前请先仔细阅读本文档⚡\\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>评论通知与管理工具建议使用这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Rlc2VydHNQL1ZhbGluZS1BZG1pbg==\"> Valine-Admin</span>。<br />\n注意 <code>SITE_URL</code>  需要以 <code>/</code>  结尾。</p>\n<p>如果某一篇文章需要关闭评论功能，则在文章 Front Matter 中配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 关闭评论</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">comment</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><h1 id=\"背景音乐\"><a class=\"anchor\" href=\"#背景音乐\">#</a> 背景音乐</h1>\n<p>在主题配置文件中，设置全局播放列表。<br />\n在文章的 Front Matter 中，设置文章专有播放列表，访问该文章页面时，将覆盖全局配置。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>单列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/song<span class=\"token punctuation\">?</span>id=1387098940</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2088001742</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//www.xiami.com/collect/250830668</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//y.qq.com/n/yqq/playsquare/3535982902.html</pre></td></tr></table></figure><p>如上，可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲，可以同时填写多个。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>多列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2943811283</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2297706586</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2031842656</span></pre></td></tr></table></figure><p>如果需要自定义媒体文件，可以按照以下格式填写：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>单列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目1\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目2\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr></table></figure><figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>多列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目1\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目2\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2031842656</span></pre></td></tr></table></figure><p>如果要关闭当前页面的背景音乐播放器，则在文章 Front Matter 中配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 关闭背景音乐</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><h1 id=\"随机图库\"><a class=\"anchor\" href=\"#随机图库\">#</a> 随机图库</h1>\n<ul>\n<li>\n<p>默认的图片列表位于 <code>&lt;root&gt;/themes/shoka/_images.yml</code>  中。<br />\n使用了渣浪图库，使用一些上传工具，比如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWMuZ2ltaG95LmNvbS8=\">这里</span><br />\n上传后图片的链接是 <code>http://wx4.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code> 。<br />\n只需要新一行写上 <code>- 6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code> 。</p>\n<p>如果想要自定义，则在 <code>&lt;root&gt;/source/_data/</code>  目录新建一个 <code>images.yml</code>  文件，这个文件中的图片至少 6 枚，将完全覆盖默认的图片列表。</p>\n</li>\n<li>\n<p>也可以直接在图片列表 yml 文件中，写上任意外链图片地址</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/qAMYEFXxJcKRsiG.gif</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/rjdhcSgEN8COBPA.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/HKyzSd7NI3mlBpt.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/Y1CBXqgeokEs457.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/Z5W6r2BSoiThHG1.jpg</pre></td></tr></table></figure><ul>\n<li>也可以在主题配置文件中，设置图床 API：</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>比如</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">image_server</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://acg.xydwz.cn/api/api.php\"</span></pre></td></tr></table></figure><h1 id=\"加载第三方组件\"><a class=\"anchor\" href=\"#加载第三方组件\">#</a> 加载第三方组件</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">vendors</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 略略略</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 略略略</span></pre></td></tr></table></figure><p>包括</p>\n<table>\n<tbody>\n<tr>\n<td><code>pace</code></td>\n<td>加载进度条</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>pjax</code></td>\n<td>页面无刷新加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>anime</code></td>\n<td>js 动画效果</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>algolia</code>   <code>instantsearch</code></td>\n<td>基于 algolia 的站内搜索</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>lazyload</code></td>\n<td>图片懒加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>quicklink</code></td>\n<td>链接资源预加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>fetch</code></td>\n<td>获取播放列表</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>katex</code>   <code>copy_tex</code></td>\n<td>数学公式显示及复制</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>fancybox</code></td>\n<td>图片放大显示及排列</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>valine</code></td>\n<td>基于 LeanCloud 的评论系统及文章阅读次数统计</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>chart</code></td>\n<td>图表显示</td>\n<td>按需</td>\n</tr>\n</tbody>\n</table>\n<p>以上文件加载全部基于 jsDelivr，并对全局加载的组件进行了文件合并。<br />\n如果不明白啥意思，则不要轻易修改。</p>\n<div class=\"note danger\">\n<p>主题版本升级的时候，可能会修改这里。<br />\n如果修改过主题默认 <code>_config.yml</code> ，记得更新主题时，末尾的 <code>vendors</code>  也要及时修改。</p>\n</div>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "http://example.com/2020/08/13/theme-shoka-doc/dependents/",
            "url": "http://example.com/2020/08/13/theme-shoka-doc/dependents/",
            "title": "Step.1 依赖插件",
            "date_published": "2020-08-13T12:46:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\"><strong>💌依赖插件</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<div class=\"note warning\">\n<p>请务必将 hexo-renderer-multi-markdown-it 升级到最新版，目前为 0.1.5</p>\n</div>\n<p>Theme Shoka 依赖以下 Hexo 插件</p>\n<table>\n<thead>\n<tr>\n<th>插件名称</th>\n<th>npm 地址</th>\n<th>功能</th>\n<th>依赖程度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hexo-renderer-multi-markdown-it</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">链接</span></td>\n<td>md 文件渲染器，压缩 css/js/html</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-autoprefixer</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">链接</span></td>\n<td>给生成的 css 文件们添加浏览器前缀</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-algoliasearch</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hbGdvbGlhc2VhcmNo\">链接</span></td>\n<td>站内搜索功能</td>\n<td>搜索按钮失灵</td>\n</tr>\n<tr>\n<td>hexo-symbols-count-time</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=\">链接</span></td>\n<td>文章或站点字数及阅读时间统计</td>\n<td>统计没有</td>\n</tr>\n<tr>\n<td>hexo-feed</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1mZWVk\">链接</span></td>\n<td>生成 Feed 文件</td>\n<td>Feed 文件没有</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>没有正确安装以上插件的话，本主题会报错 or 无法正确显示 or 部分功能失效。<br />\n <code>hexo-renderer-multi-markdown-it</code>  请注意升级到最新版</p>\n</blockquote>\n<p>安装完以上插件后，修改站点配置文件，加入相关配置。</p>\n<h1 id=\"multi-markdown-it安装与配置\"><a class=\"anchor\" href=\"#multi-markdown-it安装与配置\">#</a> multi-markdown-it 安装与配置</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<ol>\n<li>\n<p>安装前，记得务必卸载掉默认的 <code>hexo-renderer-marked</code> ，以及别的 markdown 文件渲染器。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked --save</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> remove hexo-renderer-marked</pre></td></tr></table></figure></li>\n<li>\n<p>安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it --save</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-renderer-multi-markdown-it</pre></td></tr></table></figure></li>\n<li>\n<p>如果安装缓慢，或者失败<br />\n如报错</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ERROR: Failed to download Chromium r515411<span class=\"token operator\">!</span> Set <span class=\"token string\">\"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\"</span> <span class=\"token function\">env</span> variable to skip download.</pre></td></tr></table></figure><p>因为有一步需要下载 puppeteer 里的 Chromium 内核，基于天朝内部网络现状，这一步能不能成功要靠科学和运气，所以为了避免安装失败，需要加上 <code>--ignore-scripts</code>  跳过 Chromium 内核的下载。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it --save --ignore-scripts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-renderer-multi-markdown-it --ignore-scripts</pre></td></tr></table></figure><p>puppeteer 主要是用来渲染 mermaid 流程图，只要文章中不使用 mermaid 就没有任何问题，如果要使用 mermaid 建议还是想办法完全安装。</p>\n</li>\n</ol>\n<h2 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h2>\n<ol>\n<li>加入 <code>markdown</code>  配置，用来渲染 md 文件</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>加入 <code>minify</code>  配置，压缩 css/js/html</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除 hexo-feed 用到的模板文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/json.ejs'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/atom.ejs'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/rss.ejs'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.css'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">mangle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">toplevel</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">compress</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.js'</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>停用默认代码高亮功能，否则代码块的 mac 样式不能正常显示。<br />\n找到 <code>highlight</code>  和 <code>prismjs</code> ，把 <code>enable</code>  改成 <code>false</code> 。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><h1 id=\"autoprefixer配置建议\"><a class=\"anchor\" href=\"#autoprefixer配置建议\">#</a> autoprefixer 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr></table></figure><p>缺少这个插件，首页卡片翻转效果在部分浏览器中无法正确显示。</p>\n<h1 id=\"algolia配置建议\"><a class=\"anchor\" href=\"#algolia配置建议\">#</a> algolia 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><h1 id=\"feed配置建议\"><a class=\"anchor\" href=\"#feed配置建议\">#</a> feed 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#站点关键词，用 “,” 分隔</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-date\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/rss.ejs\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rss.xml\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">atom</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/atom.ejs\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"atom.xml\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">jsonFeed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/json.ejs\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"feed.json\"</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        }
    ]
}